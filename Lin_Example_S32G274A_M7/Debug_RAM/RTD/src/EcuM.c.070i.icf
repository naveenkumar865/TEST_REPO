Parsed function:EcuM_CheckWakeup
Parsed function:EcuM_ValidateWakeupEvent
Parsed function:EcuM_SetWakeupEvent
Dump after hash based groups
Congruence classes: 2 (unique hash values: 2), with total: 3 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes
[2]: 1 classes


Dump after WPA based types groups
Congruence classes: 2 (unique hash values: 2), with total: 3 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes
[2]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 2 (unique hash values: 2), with total: 3 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes
[2]: 1 classes


Init called for 2 items (66.67%).
Dump after full equality comparison of groups
Congruence classes: 2 (unique hash values: 2), with total: 3 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes
[2]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 2 (unique hash values: 2), with total: 3 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes
[2]: 1 classes



Item count: 3
Congruent classes before: 2, after: 2
Average class size before: 1.50, after: 1.50
Average non-singular class size: 2.00, count: 1
Equal symbols: 1
Fraction of visited symbols: 33.33%

Semantic equality hit:EcuM_ValidateWakeupEvent->EcuM_CheckWakeup
Assembler symbol names:EcuM_ValidateWakeupEvent->EcuM_CheckWakeup

Symbols to be put in SSA form
{ D.5423 D.5436 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: EcuM_CheckWakeup/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: EcuM_CheckWakeup

IPA function summary for EcuM_CheckWakeup/3 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EcuM_ValidateWakeupEvent/2 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 1 stack: 0

Unified; Wrapper has been created.


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
EcuM_CheckWakeup (EcuM_WakeupSourceType wakeupSource)
{
  <bb 2> [local count: 1073741824]:
  EcuM_ValidateWakeupEvent (wakeupSource_1(D)); [tail call]
  return;

}


EcuM_ValidateWakeupEvent (EcuM_WakeupSourceType events)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


EcuM_SetWakeupEvent (EcuM_WakeupSourceType events)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  EcuMLastWakeupEvent = events_2(D);
  return;

}


