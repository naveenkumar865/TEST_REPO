Port_Ipw_RefreshPortDirection (const struct Port_ConfigType * pConfigPtr)
{
  uint32 u32LocalMSCR;
  uint8 u8MscrSiulInstance;
  uint16 u16MscrIdx;
  uint16 u16PinIndex;
  uint16 u16NumPins;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u16NumPins = pConfigPtr->u16NumPins;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16PinIndex = 0;
  goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = pConfigPtr->pUsedPadConfig;
  _2 = (unsigned int) u16PinIndex;
  _3 = _2 * 24;
  _4 = _1 + _3;
  _5 = _4->bDC;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = pConfigPtr->pUsedPadConfig;
  _8 = (unsigned int) u16PinIndex;
  _9 = _8 * 24;
  _10 = _7 + _9;
  u16MscrIdx = _10->u16MscrIdx;
  # DEBUG BEGIN_STMT
  _11 = pConfigPtr->pUsedPadConfig;
  _12 = (unsigned int) u16PinIndex;
  _13 = _12 * 24;
  _14 = _11 + _13;
  u8MscrSiulInstance = _14->u8MscrSiulInstance;
  # DEBUG BEGIN_STMT
  _15 = (int) u8MscrSiulInstance;
  _16 = Port_au32Siul2BaseAddr[_15];
  _17 = (long unsigned int) u16MscrIdx;
  _18 = _17 << 2;
  _19 = _16 + _18;
  _20 = _19 + 576;
  _21 = (volatile uint32 *) _20;
  u32LocalMSCR = *_21;
  # DEBUG BEGIN_STMT
  _22 = pConfigPtr->pUsedPadConfig;
  _23 = (unsigned int) u16PinIndex;
  _24 = _23 * 24;
  _25 = _22 + _24;
  _26 = _25->u32MSCR;
  _27 = _26 & 2097152;
  if (_27 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 2097152;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4292870143;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _28 = pConfigPtr->pUsedPadConfig;
  _29 = (unsigned int) u16PinIndex;
  _30 = _29 * 24;
  _31 = _28 + _30;
  _32 = _31->u32MSCR;
  _33 = _32 & 524288;
  if (_33 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 524288;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4294443007;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _34 = (int) u8MscrSiulInstance;
  _35 = Port_au32Siul2BaseAddr[_34];
  _36 = (long unsigned int) u16MscrIdx;
  _37 = _36 << 2;
  _38 = _35 + _37;
  _39 = _38 + 576;
  _40 = (volatile uint32 *) _39;
  *_40 = u32LocalMSCR;

  <bb 11> :
  # DEBUG BEGIN_STMT
  u16PinIndex.6_41 = u16PinIndex;
  u16PinIndex = u16PinIndex.6_41 + 1;

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (u16PinIndex < u16NumPins)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  return;

}


Port_Ipw_SetGpioPadOutput (Port_PinType PinIndex, const struct Port_ConfigType * pConfigPtr)
{
  uint8 u8LocalPDO;
  uint8 u8MscrSiulInstance;
  uint16 u16MscrIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pConfigPtr->pUsedPadConfig;
  _2 = PinIndex * 24;
  _3 = _1 + _2;
  u16MscrIdx = _3->u16MscrIdx;
  # DEBUG BEGIN_STMT
  _4 = pConfigPtr->pUsedPadConfig;
  _5 = PinIndex * 24;
  _6 = _4 + _5;
  u8MscrSiulInstance = _6->u8MscrSiulInstance;
  # DEBUG BEGIN_STMT
  _7 = pConfigPtr->pUsedPadConfig;
  _8 = PinIndex * 24;
  _9 = _7 + _8;
  u8LocalPDO = _9->u8PDO;
  # DEBUG BEGIN_STMT
  if (u8LocalPDO != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _10 = (int) u8MscrSiulInstance;
  _11 = Port_au32Siul2BaseAddr[_10];
  _12 = u16MscrIdx ^ 3;
  _13 = (long unsigned int) _12;
  _14 = _11 + _13;
  _15 = _14 + 4864;
  _16 = (volatile uint8 *) _15;
  *_16 = u8LocalPDO;

  <bb 4> :
  return;

}


Port_Ipw_SetGpioDirChangeability (uint8 u8ImcrSiulInstance, uint16 u16MscrIdx, boolean bStatus)
{
  uint8 u8PinBitOffset;
  uint16 u16PinDirFlagWord;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) u16MscrIdx;
  u8PinBitOffset = _1 & 15;
  # DEBUG BEGIN_STMT
  _2 = (int) u8ImcrSiulInstance;
  _3 = (unsigned char) u16MscrIdx;
  _4 = _3 >> 4;
  _5 = (int) _4;
  u16PinDirFlagWord = Port_Ipw_au16GPIODirChangeability[_2][_5];
  # DEBUG BEGIN_STMT
  if (bStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _6 = (int) u8PinBitOffset;
  _7 = 1 << _6;
  _8 = (short unsigned int) _7;
  u16PinDirFlagWord = u16PinDirFlagWord | _8;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _9 = (int) u8PinBitOffset;
  _10 = 1 << _9;
  _11 = (short unsigned int) _10;
  _12 = ~_11;
  u16PinDirFlagWord = u16PinDirFlagWord & _12;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _13 = (int) u8ImcrSiulInstance;
  _14 = (unsigned char) u16MscrIdx;
  _15 = _14 >> 4;
  _16 = (int) _15;
  Port_Ipw_au16GPIODirChangeability[_13][_16] = u16PinDirFlagWord;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_00 ();
  return;

}


Port_Ipw_SetPinMode (Port_PinType PinIndex, Port_PinModeType PinMode, const struct Port_ConfigType * pConfigPtr)
{
  uint8 CoreId;
  uint8 u8PinDescBitOffset;
  uint16 u16PinDescWord;
  uint8 u8MscrSiulInstance;
  uint16 u16MscrIdx;
  Std_ReturnType PinModeError;
  Std_ReturnType D.6617;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PinModeError = 0;
  # DEBUG BEGIN_STMT
  _1 = pConfigPtr->pUsedPadConfig;
  _2 = PinIndex * 24;
  _3 = _1 + _2;
  u16MscrIdx = _3->u16MscrIdx;
  # DEBUG BEGIN_STMT
  _4 = pConfigPtr->pUsedPadConfig;
  _5 = PinIndex * 24;
  _6 = _4 + _5;
  u8MscrSiulInstance = _6->u8MscrSiulInstance;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreId = 0;
  # DEBUG BEGIN_STMT
  _7 = pConfigPtr->u16NumPins;
  _8 = (long unsigned int) _7;
  if (PinIndex >= _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ReportError (124, 0, 4, 10);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _9 = pConfigPtr->pau32Port_PinToPartitionMap;
  _10 = PinIndex * 4;
  _11 = _9 + _10;
  _12 = *_11;
  _13 = (int) CoreId;
  _14 = 1 << _13;
  _15 = _12 & _14;
  _16 = (int) CoreId;
  _17 = _15 >> _16;
  if (_17 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ReportError (124, 0, 4, 240);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = pConfigPtr->pUsedPadConfig;
  _19 = PinIndex * 24;
  _20 = _18 + _19;
  _21 = _20->bMC;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ReportError (124, 0, 4, 14);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (PinMode > 20)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  PinModeError = 13;
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _23 = (unsigned char) u16MscrIdx;
  u8PinDescBitOffset = _23 & 15;
  # DEBUG BEGIN_STMT
  _24 = (int) u8MscrSiulInstance;
  _25 = Port_apSiul2InstancePinModeAvailability[_24];
  _26 = (int) PinMode;
  _27 = u16MscrIdx >> 4;
  _28 = (int) _27;
  u16PinDescWord = *_25[_26][_28];
  # DEBUG BEGIN_STMT
  _29 = (int) u8PinDescBitOffset;
  _30 = 1 << _29;
  _31 = (short unsigned int) _30;
  _32 = u16PinDescWord & _31;
  if (_32 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Port_Ipw_SetMode (u8MscrSiulInstance, u16MscrIdx, PinIndex, PinMode, pConfigPtr);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  PinModeError = 13;

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.6617 = PinModeError;
  return D.6617;

}


Port_Ipw_SetPinDirection (Port_PinType PinIndex, Port_PinDirectionType eDirection, const struct Port_ConfigType * pConfigPtr)
{
  uint16 u16PinChangeDirFlagWord;
  uint8 u8PinDescBitOffset;
  uint8 CoreId;
  Std_ReturnType PinDirError;
  uint32 u32LocalMSCR;
  uint8 u8MscrSiulInstance;
  uint16 u16MscrIdx;
  Std_ReturnType D.6600;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pConfigPtr->pUsedPadConfig;
  _2 = PinIndex * 24;
  _3 = _1 + _2;
  u16MscrIdx = _3->u16MscrIdx;
  # DEBUG BEGIN_STMT
  _4 = pConfigPtr->pUsedPadConfig;
  _5 = PinIndex * 24;
  _6 = _4 + _5;
  u8MscrSiulInstance = _6->u8MscrSiulInstance;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PinDirError = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreId = 0;
  # DEBUG BEGIN_STMT
  _7 = pConfigPtr->u16NumPins;
  _8 = (long unsigned int) _7;
  if (PinIndex >= _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ReportError (124, 0, 1, 10);
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _9 = pConfigPtr->pau32Port_PinToPartitionMap;
  _10 = PinIndex * 4;
  _11 = _9 + _10;
  _12 = *_11;
  _13 = (int) CoreId;
  _14 = 1 << _13;
  _15 = _12 & _14;
  _16 = (int) CoreId;
  _17 = _15 >> _16;
  if (_17 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ReportError (124, 0, 1, 240);
  goto <bb 17>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = (unsigned char) u16MscrIdx;
  u8PinDescBitOffset = _18 & 15;
  # DEBUG BEGIN_STMT
  _19 = (int) u8MscrSiulInstance;
  _20 = u16MscrIdx >> 4;
  _21 = (unsigned char) _20;
  _22 = (int) _21;
  u16PinChangeDirFlagWord = Port_Ipw_au16GPIODirChangeability[_19][_22];
  # DEBUG BEGIN_STMT
  _23 = pConfigPtr->pUsedPadConfig;
  _24 = PinIndex * 24;
  _25 = _23 + _24;
  _26 = _25->bDC;
  if (_26 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _27 = (int) u8PinDescBitOffset;
  _28 = 1 << _27;
  _29 = (short unsigned int) _28;
  _30 = u16PinChangeDirFlagWord & _29;
  if (_30 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _31 = (int) u8MscrSiulInstance;
  _32 = Port_au32Siul2BaseAddr[_31];
  _33 = (long unsigned int) u16MscrIdx;
  _34 = _33 << 2;
  _35 = _32 + _34;
  _36 = _35 + 576;
  _37 = (volatile uint32 *) _36;
  u32LocalMSCR = *_37;
  # DEBUG BEGIN_STMT
  if (eDirection == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4294443007;
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 2097152;
  goto <bb 15>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (eDirection == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 524288;
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4292870143;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (eDirection == 2)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 524288;
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR | 2097152;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4294443007;
  # DEBUG BEGIN_STMT
  u32LocalMSCR = u32LocalMSCR & 4292870143;

  <bb 15> :
  # DEBUG BEGIN_STMT
  _38 = (int) u8MscrSiulInstance;
  _39 = Port_au32Siul2BaseAddr[_38];
  _40 = (long unsigned int) u16MscrIdx;
  _41 = _40 << 2;
  _42 = _39 + _41;
  _43 = _42 + 576;
  _44 = (volatile uint32 *) _43;
  *_44 = u32LocalMSCR;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  PinDirError = 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  D.6600 = PinDirError;
  return D.6600;

}


Port_Ipw_Init (const struct Port_ConfigType * pConfigPtr)
{
  struct SIUL2_Type * imcrBase;
  uint8 u8Imcr;
  uint16 u16ImcrIdx;
  uint8 u8ImcrSiulInstance;
  uint16 u16Counter;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  imcrBase = 1074380800B;
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = 0;
  goto <bb 13>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  u16ImcrIdx = 0;
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = (int) u8ImcrSiulInstance;
  _2 = pConfigPtr->pImcrConfig[_1];
  _3 = (sizetype) u16ImcrIdx;
  _4 = _2 + _3;
  u8Imcr = *_4;
  # DEBUG BEGIN_STMT
  if (u8Imcr != 255)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (u16ImcrIdx <= 83)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  imcrBase = 1074380800B;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  imcrBase = 1140916224B;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (u16ImcrIdx <= 495)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) u16ImcrIdx;
  _6 = _5 & 511;
  imcrBase->IMCR[_6] = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  u16ImcrIdx.0_7 = u16ImcrIdx;
  u16ImcrIdx = u16ImcrIdx.0_7 + 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  _8 = (int) u8ImcrSiulInstance;
  _9 = pConfigPtr->au16NumImcrs[_8];
  if (u16ImcrIdx < _9)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance.1_10 = u8ImcrSiulInstance;
  u8ImcrSiulInstance = u8ImcrSiulInstance.1_10 + 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (u8ImcrSiulInstance <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _11 = pConfigPtr->IpConfigPtr;
  Siul2_Port_Ip_Init (2, _11);
  # DEBUG BEGIN_STMT
  Port_Ipw_Init_UnusedPins (pConfigPtr);
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = 0;
  goto <bb 19>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  u16Counter = 0;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _12 = (int) u8ImcrSiulInstance;
  _13 = (int) u16Counter;
  Port_Ipw_au16GPIODirChangeability[_12][_13] = 0;
  # DEBUG BEGIN_STMT
  u16Counter.2_14 = u16Counter;
  u16Counter = u16Counter.2_14 + 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (u16Counter <= 11)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance.3_15 = u8ImcrSiulInstance;
  u8ImcrSiulInstance = u8ImcrSiulInstance.3_15 + 1;

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (u8ImcrSiulInstance <= 1)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  return;

}


Port_Ipw_SetAltMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinModeType PinMode)
{
  uint32 MscrValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_au32Siul2BaseAddr[_1];
  _3 = (long unsigned int) u16MscrIdx;
  _4 = _3 << 2;
  _5 = _2 + _4;
  _6 = _5 + 576;
  _7 = (volatile uint32 *) _6;
  MscrValue = *_7;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4294967288;
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) PinMode;
  MscrValue = MscrValue | _8;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 2097152;
  # DEBUG BEGIN_STMT
  _9 = (int) u8MscrSiulInstance;
  _10 = Port_au32Siul2BaseAddr[_9];
  _11 = (long unsigned int) u16MscrIdx;
  _12 = _11 << 2;
  _13 = _10 + _12;
  _14 = _13 + 576;
  _15 = (volatile uint32 *) _14;
  *_15 = MscrValue;
  return;

}


Port_Ipw_SetOnlyInputMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx)
{
  uint32 MscrValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_au32Siul2BaseAddr[_1];
  _3 = (long unsigned int) u16MscrIdx;
  _4 = _3 << 2;
  _5 = _2 + _4;
  _6 = _5 + 576;
  _7 = (volatile uint32 *) _6;
  MscrValue = *_7;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4292870136;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 524288;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioDirChangeability (u8MscrSiulInstance, u16MscrIdx, 0);
  # DEBUG BEGIN_STMT
  _8 = (int) u8MscrSiulInstance;
  _9 = Port_au32Siul2BaseAddr[_8];
  _10 = (long unsigned int) u16MscrIdx;
  _11 = _10 << 2;
  _12 = _9 + _11;
  _13 = _12 + 576;
  _14 = (volatile uint32 *) _13;
  *_14 = MscrValue;
  return;

}


Port_Ipw_SetGpioMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinType PinIndex, const struct Port_ConfigType * pConfigPtr)
{
  uint32 MscrValue;
  Port_PinDirectionType ePadDirection;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_au32Siul2BaseAddr[_1];
  _3 = (long unsigned int) u16MscrIdx;
  _4 = _3 << 2;
  _5 = _2 + _4;
  _6 = _5 + 576;
  _7 = (volatile uint32 *) _6;
  MscrValue = *_7;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioDirChangeability (u8MscrSiulInstance, u16MscrIdx, 1);
  # DEBUG BEGIN_STMT
  _8 = pConfigPtr->pUsedPadConfig;
  _9 = PinIndex * 24;
  _10 = _8 + _9;
  ePadDirection = _10->ePadDir;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4294967288;
  # DEBUG BEGIN_STMT
  if (ePadDirection == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 2097152;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioPadOutput (PinIndex, pConfigPtr);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ePadDirection == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 524288;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (ePadDirection == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 2621440;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioPadOutput (PinIndex, pConfigPtr);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4292345855;

  <bb 9> :
  # DEBUG BEGIN_STMT
  Port_Ipw_SetPinDirection (PinIndex, ePadDirection, pConfigPtr);
  # DEBUG BEGIN_STMT
  _11 = (int) u8MscrSiulInstance;
  _12 = Port_au32Siul2BaseAddr[_11];
  _13 = (long unsigned int) u16MscrIdx;
  _14 = _13 << 2;
  _15 = _12 + _14;
  _16 = _15 + 576;
  _17 = (volatile uint32 *) _16;
  *_17 = MscrValue;
  return;

}


Port_Ipw_SetInputMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinModeType PinMode)
{
  struct Port_InMuxSettingType PadInMuxData;
  uint8 u8ImcrSiulInstance;
  uint32 ImcrValue;
  uint16 u16ImcrIdx;
  uint32 MscrValue;
  uint16 u16Index;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16ImcrIdx = 0;
  # DEBUG BEGIN_STMT
  ImcrValue = 0;
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_au32Siul2BaseAddr[_1];
  _3 = (long unsigned int) u16MscrIdx;
  _4 = _3 << 2;
  _5 = _2 + _4;
  _6 = _5 + 576;
  _7 = (volatile uint32 *) _6;
  MscrValue = *_7;
  # DEBUG BEGIN_STMT
  _8 = (int) u8MscrSiulInstance;
  _9 = Port_apInMuxSettingsIndex[_8];
  _10 = (unsigned int) u16MscrIdx;
  _11 = _10 * 2;
  _12 = _9 + _11;
  u16Index = *_12;
  # DEBUG BEGIN_STMT
  _13 = (int) u8MscrSiulInstance;
  _14 = Port_apInMuxSettings[_13];
  _15 = (int) u16Index;
  _16 = (int) PinMode;
  _17 = _15 + _16;
  _18 = (sizetype) _17;
  _19 = _18 + 1073741816;
  _20 = _19 * 4;
  _21 = _14 + _20;
  PadInMuxData = *_21;
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = PadInMuxData.u8ImcrSiulInstance;
  # DEBUG BEGIN_STMT
  u16ImcrIdx = PadInMuxData.u16ImcrIdx;
  # DEBUG BEGIN_STMT
  _22 = PadInMuxData.u8ImcrSSS;
  ImcrValue = (uint32) _22;
  # DEBUG BEGIN_STMT
  _23 = (int) u8ImcrSiulInstance;
  _24 = Port_au32Siul2BaseAddr[_23];
  _25 = (long unsigned int) u16ImcrIdx;
  _26 = _25 << 2;
  _27 = _24 + _26;
  _28 = _27 + 2624;
  _29 = (volatile uint32 *) _28;
  *_29 = ImcrValue;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4292870136;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 524288;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioDirChangeability (u8MscrSiulInstance, u16MscrIdx, 0);
  # DEBUG BEGIN_STMT
  _30 = (int) u8MscrSiulInstance;
  _31 = Port_au32Siul2BaseAddr[_30];
  _32 = (long unsigned int) u16MscrIdx;
  _33 = _32 << 2;
  _34 = _31 + _33;
  _35 = _34 + 576;
  _36 = (volatile uint32 *) _35;
  *_36 = MscrValue;
  PadInMuxData = {CLOBBER};
  return;

}


Port_Ipw_SetInoutMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinModeType PinMode)
{
  uint8 u8ImcrSiulInstance;
  uint32 ImcrValue;
  uint16 u16ImcrIdx;
  uint16 u16Index;
  uint32 MscrValue;
  struct Port_InoutSettingType PadInoutData;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16ImcrIdx = 0;
  # DEBUG BEGIN_STMT
  ImcrValue = 0;
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = 0;
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_au32Siul2BaseAddr[_1];
  _3 = (long unsigned int) u16MscrIdx;
  _4 = _3 << 2;
  _5 = _2 + _4;
  _6 = _5 + 576;
  _7 = (volatile uint32 *) _6;
  MscrValue = *_7;
  # DEBUG BEGIN_STMT
  u16Index = Port_Ipw_GetIndexForInoutEntry (u8MscrSiulInstance, u16MscrIdx, PinMode);
  # DEBUG BEGIN_STMT
  _8 = (int) u8MscrSiulInstance;
  _9 = Port_apInoutMuxSettings[_8];
  _10 = (unsigned int) u16Index;
  _11 = _10 * 8;
  _12 = _9 + _11;
  PadInoutData = *_12;
  # DEBUG BEGIN_STMT
  u8ImcrSiulInstance = PadInoutData.u8ImcrSiulInstance;
  # DEBUG BEGIN_STMT
  _13 = (long unsigned int) PinMode;
  MscrValue = _13 + 4294967282;
  # DEBUG BEGIN_STMT
  u16ImcrIdx = PadInoutData.u16ImcrIdx;
  # DEBUG BEGIN_STMT
  _14 = PadInoutData.u8ImcrSSS;
  ImcrValue = (uint32) _14;
  # DEBUG BEGIN_STMT
  _15 = (int) u8ImcrSiulInstance;
  _16 = Port_au32Siul2BaseAddr[_15];
  _17 = (long unsigned int) u16ImcrIdx;
  _18 = _17 << 2;
  _19 = _16 + _18;
  _20 = _19 + 2624;
  _21 = (volatile uint32 *) _20;
  *_21 = ImcrValue;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue & 4294967288;
  # DEBUG BEGIN_STMT
  _22 = (long unsigned int) PinMode;
  _23 = _22 + 4294967282;
  MscrValue = MscrValue | _23;
  # DEBUG BEGIN_STMT
  MscrValue = MscrValue | 2621440;
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioDirChangeability (u8MscrSiulInstance, u16MscrIdx, 0);
  # DEBUG BEGIN_STMT
  _24 = (int) u8MscrSiulInstance;
  _25 = Port_au32Siul2BaseAddr[_24];
  _26 = (long unsigned int) u16MscrIdx;
  _27 = _26 << 2;
  _28 = _25 + _27;
  _29 = _28 + 576;
  _30 = (volatile uint32 *) _29;
  *_30 = MscrValue;
  PadInoutData = {CLOBBER};
  return;

}


Port_Ipw_SetMode (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinType PinIndex, Port_PinModeType PinMode, const struct Port_ConfigType * pConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) PinMode;
  switch (_1) <default: <L21> [INV], case 0: <L13> [INV], case 1 ... 6: <L15> [INV], case 7: <L14> [INV], case 8 ... 14: <L6> [INV], case 15 ... 20: <L0> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetInoutMode (u8MscrSiulInstance, u16MscrIdx, PinMode);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 4> :
<L6>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetInputMode (u8MscrSiulInstance, u16MscrIdx, PinMode);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 5> :
<L13>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioMode (u8MscrSiulInstance, u16MscrIdx, PinIndex, pConfigPtr);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 6> :
<L14>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetOnlyInputMode (u8MscrSiulInstance, u16MscrIdx);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 7> :
<L15>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetAltMode (u8MscrSiulInstance, u16MscrIdx, PinMode);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
<L21>:
  # DEBUG BEGIN_STMT
  Port_Ipw_SetGpioDirChangeability (u8MscrSiulInstance, u16MscrIdx, 0);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 9> :
  return;

}


Port_Ipw_GetIndexForInoutEntry (uint8 u8MscrSiulInstance, uint16 u16MscrIdx, Port_PinModeType PinMode)
{
  uint16 u16Counter;
  uint16 u16ReturnIndex;
  uint16 D.6623;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u16ReturnIndex = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16Counter = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) u8MscrSiulInstance;
  _2 = Port_apInoutMuxSettings[_1];
  _3 = (unsigned int) u16Counter;
  _4 = _3 * 8;
  _5 = _2 + _4;
  _6 = _5->u16MscrIdx;
  if (u16MscrIdx == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _7 = (int) u8MscrSiulInstance;
  _8 = Port_apInoutMuxSettings[_7];
  _9 = (unsigned int) u16Counter;
  _10 = _9 * 8;
  _11 = _8 + _10;
  _12 = _11->u8Mode;
  if (PinMode == _12)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  u16ReturnIndex = u16Counter;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  u16Counter.5_13 = u16Counter;
  u16Counter = u16Counter.5_13 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _14 = (int) u8MscrSiulInstance;
  _15 = Port_au16NumInoutMuxSettings[_14];
  if (u16Counter < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.6623 = u16ReturnIndex;
  return D.6623;

}


Port_Ipw_Init_UnusedPins (const struct Port_ConfigType * pConfigPtr)
{
  uint8 u8MscrSiulInstance;
  uint16 u16MscrIdx;
  uint32 u32LocalMSCR;
  uint8 u8LocalPDO;
  uint16 u16NumUnusedPins;
  uint16 u16PinIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16NumUnusedPins = pConfigPtr->u16NumUnusedPins;
  # DEBUG BEGIN_STMT
  _1 = pConfigPtr->pUnusedPadConfig;
  u8LocalPDO = _1->u8PDO;
  # DEBUG BEGIN_STMT
  _2 = pConfigPtr->pUnusedPadConfig;
  u32LocalMSCR = _2->u32MSCR;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u16PinIndex = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = pConfigPtr->pUnusedPads;
  _4 = (unsigned int) u16PinIndex;
  _5 = _4 * 4;
  _6 = _3 + _5;
  u16MscrIdx = _6->u16MscrIdx;
  # DEBUG BEGIN_STMT
  _7 = pConfigPtr->pUnusedPads;
  _8 = (unsigned int) u16PinIndex;
  _9 = _8 * 4;
  _10 = _7 + _9;
  u8MscrSiulInstance = _10->u8MscrSiulInstance;
  # DEBUG BEGIN_STMT
  if (u8LocalPDO != 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) u8MscrSiulInstance;
  _12 = Port_au32Siul2BaseAddr[_11];
  _13 = u16MscrIdx ^ 3;
  _14 = (long unsigned int) _13;
  _15 = _12 + _14;
  _16 = _15 + 4864;
  _17 = (volatile uint8 *) _16;
  *_17 = u8LocalPDO;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _18 = (int) u8MscrSiulInstance;
  _19 = Port_au32Siul2BaseAddr[_18];
  _20 = (long unsigned int) u16MscrIdx;
  _21 = _20 << 2;
  _22 = _19 + _21;
  _23 = _22 + 576;
  _24 = (volatile uint32 *) _23;
  *_24 = u32LocalMSCR;
  # DEBUG BEGIN_STMT
  u16PinIndex.4_25 = u16PinIndex;
  u16PinIndex = u16PinIndex.4_25 + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (u16PinIndex < u16NumUnusedPins)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


