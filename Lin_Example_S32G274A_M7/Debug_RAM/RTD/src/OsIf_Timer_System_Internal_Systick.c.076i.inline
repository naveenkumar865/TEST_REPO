IPA function summary for OsIf_Timer_System_Internal_GetElapsed/2 inlinable
  global time:     10.000000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.500000, time:6.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for OsIf_Timer_System_Internal_GetCounter/1 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for OsIf_Timer_System_Internal_Init/0 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 20.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in OsIf_Timer_System_Internal_GetElapsed/2.
Enqueueing calls in OsIf_Timer_System_Internal_GetCounter/1.
Enqueueing calls in OsIf_Timer_System_Internal_Init/0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 20.000000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for OsIf_Timer_System_Internal_GetElapsed/2 inlinable
  global time:     10.000000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.500000, time:6.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for OsIf_Timer_System_Internal_GetCounter/1 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for OsIf_Timer_System_Internal_Init/0 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

OsIf_Timer_System_Internal_GetElapsed/2 (OsIf_Timer_System_Internal_GetElapsed) @05ab7380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
OsIf_Timer_System_Internal_GetCounter/1 (OsIf_Timer_System_Internal_GetCounter) @05ab7d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
OsIf_Timer_System_Internal_Init/0 (OsIf_Timer_System_Internal_Init) @05ab7a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function OsIf_Timer_System_Internal_Init (OsIf_Timer_System_Internal_Init, funcdef_no=0, decl_uid=5620, cgraph_uid=1, symbol_order=0)

OsIf_Timer_System_Internal_Init (uint32 SystemCounterFreq)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct S32_SysTick_Type *)3758153744B].CSRr ={v} 0;
  # DEBUG BEGIN_STMT
  MEM[(struct S32_SysTick_Type *)3758153744B].RVR ={v} 16777215;
  # DEBUG BEGIN_STMT
  MEM[(struct S32_SysTick_Type *)3758153744B].CVR ={v} 0;
  # DEBUG BEGIN_STMT
  MEM[(struct S32_SysTick_Type *)3758153744B].CSRr ={v} 5;
  return;

}



;; Function OsIf_Timer_System_Internal_GetCounter (OsIf_Timer_System_Internal_GetCounter, funcdef_no=1, decl_uid=5622, cgraph_uid=2, symbol_order=1)

OsIf_Timer_System_Internal_GetCounter ()
{
  long unsigned int _1;
  uint32 _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct S32_SysTick_Type *)3758153744B].CVR;
  _3 = _1 & 16777215;
  return _3;

}



;; Function OsIf_Timer_System_Internal_GetElapsed (OsIf_Timer_System_Internal_GetElapsed, funcdef_no=2, decl_uid=5624, cgraph_uid=3, symbol_order=2)

OsIf_Timer_System_Internal_GetElapsed (uint32 * const CurrentRef)
{
  uint32 dif;
  uint32 CurrentVal;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct S32_SysTick_Type *)3758153744B].CVR;
  CurrentVal_7 = _1 & 16777215;
  # DEBUG CurrentVal => CurrentVal_7
  # DEBUG BEGIN_STMT
  # DEBUG dif => 0
  # DEBUG BEGIN_STMT
  _2 = *CurrentRef_8(D);
  if (_2 < CurrentVal_7)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct S32_SysTick_Type *)3758153744B].RVR;
  _4 = _2 - CurrentVal_7;
  dif_10 = _3 + _4;
  # DEBUG dif => dif_10
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  dif_9 = _2 - CurrentVal_7;
  # DEBUG dif => dif_9

  <bb 5> [local count: 1073741824]:
  # dif_5 = PHI <dif_10(3), dif_9(4)>
  # DEBUG dif => dif_5
  # DEBUG BEGIN_STMT
  *CurrentRef_8(D) = CurrentVal_7;
  # DEBUG BEGIN_STMT
  return dif_5;

}


