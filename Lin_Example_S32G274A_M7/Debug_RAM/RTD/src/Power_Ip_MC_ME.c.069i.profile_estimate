Histogram:
Power_Ip_MC_ME_ConfigurePartitionOutputSafe.part.0 ()
{
  uint32 TempValue;
  uint32 PartitionConfig;
  uint32 PartitionTriggerMask;
  uint32 PartitionStatus;
  uint32 StartTime;
  uint32 ElapsedTime;
  uint32 TimeoutTicks;
  boolean TimeoutOccurred;
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * PartitionConfigPtr;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#5 s=> PartitionConfigPtr
  # DEBUG PartitionConfigPtr => D#5

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 3> [local count: 1073741824]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_ConfigurePartitionClock.part.0 ()
{
  uint32 TempValue;
  uint32 PartitionConfig;
  uint32 PartitionTriggerMask;
  uint32 PartitionStatus;
  uint32 StartTime;
  uint32 ElapsedTime;
  uint32 TimeoutTicks;
  boolean TimeoutOccurred;
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * PartitionConfigPtr;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#3 s=> PartitionConfigPtr
  # DEBUG PartitionConfigPtr => D#3

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 3> [local count: 1073741824]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_SocTriggerResetEvent (Power_Ip_PowerModeType PowerMode)
{
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.28_1;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.29_2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (PowerMode_4(D) == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.28_1 = Power_Ip_pxMC_ME;
  Power_Ip_pxMC_ME.28_1->MODE_CONF ={v} 1;
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  if (PowerMode_4(D) == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.29_2 = Power_Ip_pxMC_ME;
  Power_Ip_pxMC_ME.29_2->MODE_CONF ={v} 2;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerModeUpdate ();
  return;

}


Power_Ip_MC_ME_DisablePartitionOutputSafe (const struct Power_Ip_MC_ME_ModeConfigType * ModeConfigPtr)
{
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * TempPartitionConfig;
  const struct Power_Ip_MC_ME_PartitionConfigType[4] * _1;
  int _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG TempPartitionConfig => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PartitionIndex => 0
  goto <bb 8>; [100.00%]

  <bb 3> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_11(D)->ArrayPartitionConfigPtr;
  _2 = (int) PartitionIndex_7;
  TempPartitionConfig_12 = &*_1[_2];
  # DEBUG TempPartitionConfig => TempPartitionConfig_12
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionUnderMcuControl;
  if (_3 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 429496729]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPowerUnderMcuControl;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  _5 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPconfRegValue;
  _6 = _5 & 4;
  if (_6 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_ConfigurePartitionOutputSafe (TempPartitionConfig_12);

  <bb 7> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  PartitionIndex_14 = PartitionIndex_7 + 1;
  # DEBUG PartitionIndex => PartitionIndex_14

  <bb 8> [local count: 1073741824]:
  # PartitionIndex_7 = PHI <0(2), PartitionIndex_14(7)>
  # DEBUG PartitionIndex => PartitionIndex_7
  # DEBUG BEGIN_STMT
  if (PartitionIndex_7 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  return;

}


Power_Ip_MC_ME_EnablePartitionOutputSafe (const struct Power_Ip_MC_ME_ModeConfigType * ModeConfigPtr)
{
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * TempPartitionConfig;
  const struct Power_Ip_MC_ME_PartitionConfigType[4] * _1;
  int _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG TempPartitionConfig => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PartitionIndex => 0
  goto <bb 8>; [100.00%]

  <bb 3> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_11(D)->ArrayPartitionConfigPtr;
  _2 = (int) PartitionIndex_7;
  TempPartitionConfig_12 = &*_1[_2];
  # DEBUG TempPartitionConfig => TempPartitionConfig_12
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionUnderMcuControl;
  if (_3 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 429496729]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPowerUnderMcuControl;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  _5 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPconfRegValue;
  _6 = _5 & 4;
  if (_6 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_ConfigurePartitionOutputSafe (TempPartitionConfig_12);

  <bb 7> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  PartitionIndex_14 = PartitionIndex_7 + 1;
  # DEBUG PartitionIndex => PartitionIndex_14

  <bb 8> [local count: 1073741824]:
  # PartitionIndex_7 = PHI <0(2), PartitionIndex_14(7)>
  # DEBUG PartitionIndex => PartitionIndex_7
  # DEBUG BEGIN_STMT
  if (PartitionIndex_7 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  return;

}


Power_Ip_MC_ME_DisablePartitionClock (const struct Power_Ip_MC_ME_ModeConfigType * ModeConfigPtr)
{
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * TempPartitionConfig;
  const struct Power_Ip_MC_ME_PartitionConfigType[4] * _1;
  int _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG TempPartitionConfig => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PartitionIndex => 0
  goto <bb 8>; [100.00%]

  <bb 3> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_11(D)->ArrayPartitionConfigPtr;
  _2 = (int) PartitionIndex_7;
  TempPartitionConfig_12 = &*_1[_2];
  # DEBUG TempPartitionConfig => TempPartitionConfig_12
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionUnderMcuControl;
  if (_3 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 429496729]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPowerUnderMcuControl;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  _5 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPconfRegValue;
  _6 = _5 & 1;
  if (_6 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_ConfigurePartitionClock (TempPartitionConfig_12);

  <bb 7> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  PartitionIndex_14 = PartitionIndex_7 + 1;
  # DEBUG PartitionIndex => PartitionIndex_14

  <bb 8> [local count: 1073741824]:
  # PartitionIndex_7 = PHI <0(2), PartitionIndex_14(7)>
  # DEBUG PartitionIndex => PartitionIndex_7
  # DEBUG BEGIN_STMT
  if (PartitionIndex_7 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  return;

}


Power_Ip_MC_ME_EnablePartitionClock (const struct Power_Ip_MC_ME_ModeConfigType * ModeConfigPtr)
{
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType * TempPartitionConfig;
  const struct Power_Ip_MC_ME_PartitionConfigType[4] * _1;
  int _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG TempPartitionConfig => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PartitionIndex => 0
  goto <bb 8>; [100.00%]

  <bb 3> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_11(D)->ArrayPartitionConfigPtr;
  _2 = (int) PartitionIndex_7;
  TempPartitionConfig_12 = &*_1[_2];
  # DEBUG TempPartitionConfig => TempPartitionConfig_12
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionUnderMcuControl;
  if (_3 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 429496729]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPowerUnderMcuControl;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  _5 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionPconfRegValue;
  _6 = _5 & 1;
  if (_6 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_ConfigurePartitionClock (TempPartitionConfig_12);

  <bb 7> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  PartitionIndex_14 = PartitionIndex_7 + 1;
  # DEBUG PartitionIndex => PartitionIndex_14

  <bb 8> [local count: 1073741824]:
  # PartitionIndex_7 = PHI <0(2), PartitionIndex_14(7)>
  # DEBUG PartitionIndex => PartitionIndex_7
  # DEBUG BEGIN_STMT
  if (PartitionIndex_7 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  return;

}


Power_Ip_MC_ME_ConfigCoreCOFBClock (const struct Power_Ip_MC_ME_ModeConfigType * ModeConfigPtr)
{
  uint8 CoreIndex;
  uint8 CofbIndex;
  uint8 PartitionIndex;
  const struct Power_Ip_MC_ME_PartitionConfigType[4] * _1;
  int _2;
  _Bool _3;
  const struct Power_Ip_MC_ME_CofbConfigType[<unknown>] * _4;
  int _5;
  _Bool _6;
  const struct Power_Ip_MC_ME_CofbConfigType * _7;
  unsigned char _8;
  unsigned char _9;
  const struct Power_Ip_MC_ME_CoreConfigType[<unknown>] * _10;
  int _11;
  _Bool _12;
  const struct Power_Ip_MC_ME_CoreConfigType * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  const struct Power_Ip_MC_ME_CoreConfigType[<unknown>] * _17;
  int _18;
  _Bool _19;
  const struct Power_Ip_MC_ME_CoreConfigType * _20;
  unsigned char _21;
  unsigned char _22;

  <bb 2> [local count: 109362598]:
  # DEBUG BEGIN_STMT
  # DEBUG TempPartitionConfig => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PartitionIndex => 0
  goto <bb 18>; [100.00%]

  <bb 3> [local count: 437450378]:
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_36(D)->ArrayPartitionConfigPtr;
  _2 = (int) PartitionIndex_23;
  # DEBUG D#6 => &*_1[_2]
  # DEBUG TempPartitionConfig => D#6
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionUnderMcuControl;
  if (_3 != 0)
    goto <bb 22>; [27.00%]
  else
    goto <bb 17>; [73.00%]

  <bb 22> [local count: 118111602]:
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _4 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].ArrayPartitionCofbConfigPtr;
  _5 = (int) CofbIndex_24;
  _6 = *_4[_5].CofbUnderMcuControl;
  if (_6 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  _7 = &*_4[_5];
  _8 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionIndex;
  Power_Ip_MC_ME_ConfigureCOFB (_7, _8);

  <bb 6> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  CofbIndex_42 = CofbIndex_24 + 1;
  # DEBUG CofbIndex => CofbIndex_42

  <bb 7> [local count: 1073741824]:
  # CofbIndex_24 = PHI <CofbIndex_42(6), 0(22)>
  # DEBUG CofbIndex => CofbIndex_24
  # DEBUG BEGIN_STMT
  _9 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].NumberOfCofbs;
  if (_9 > CofbIndex_24)
    goto <bb 4>; [89.00%]
  else
    goto <bb 21>; [11.00%]

  <bb 21> [local count: 118111601]:
  goto <bb 11>; [100.00%]

  <bb 8> [local count: 955630212]:
  # DEBUG BEGIN_STMT
  _10 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].ArrayPartitionCoreConfigPtr;
  _11 = (int) CoreIndex_25;
  _12 = *_10[_11].CoreUnderMcuControl;
  if (_12 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 315357970]:
  # DEBUG BEGIN_STMT
  _13 = &*_10[_11];
  _14 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionIndex;
  Power_Ip_MC_ME_ConfigureCore (_13, _14);

  <bb 10> [local count: 955630212]:
  # DEBUG BEGIN_STMT
  CoreIndex_40 = CoreIndex_25 + 1;
  # DEBUG CoreIndex => CoreIndex_40

  <bb 11> [local count: 1073741811]:
  # CoreIndex_25 = PHI <CoreIndex_40(10), 0(21)>
  # DEBUG CoreIndex => CoreIndex_25
  # DEBUG BEGIN_STMT
  _15 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].NumberOfCores;
  if (_15 > CoreIndex_25)
    goto <bb 8>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  _16 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionIndex;
  if (_16 == 1)
    goto <bb 20>; [16.00%]
  else
    goto <bb 17>; [84.00%]

  <bb 20> [local count: 18897856]:
  goto <bb 16>; [100.00%]

  <bb 13> [local count: 152900832]:
  # DEBUG BEGIN_STMT
  _17 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].ArrayPartitionCoreConfigPtr;
  _18 = (int) CoreIndex_26;
  _19 = *_17[_18].CoreUnderMcuControl;
  if (_19 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [local count: 50457275]:
  # DEBUG BEGIN_STMT
  _20 = &*_17[_18];
  _21 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].PartitionIndex;
  Power_Ip_MC_ME_ConfigureCorePartition1 (_20, _21);

  <bb 15> [local count: 152900832]:
  # DEBUG BEGIN_STMT
  CoreIndex_38 = CoreIndex_26 + 1;
  # DEBUG CoreIndex => CoreIndex_38

  <bb 16> [local count: 171798688]:
  # CoreIndex_26 = PHI <CoreIndex_38(15), 0(20)>
  # DEBUG CoreIndex => CoreIndex_26
  # DEBUG BEGIN_STMT
  _22 = MEM[(const struct Power_Ip_MC_ME_PartitionConfigType *)_1][_2].NumberOfCores;
  if (_22 > CoreIndex_26)
    goto <bb 13>; [89.00%]
  else
    goto <bb 17>; [11.00%]

  <bb 17> [local count: 437450375]:
  # DEBUG BEGIN_STMT
  PartitionIndex_43 = PartitionIndex_23 + 1;
  # DEBUG PartitionIndex => PartitionIndex_43

  <bb 18> [local count: 546812973]:
  # PartitionIndex_23 = PHI <0(2), PartitionIndex_43(17)>
  # DEBUG PartitionIndex => PartitionIndex_23
  # DEBUG BEGIN_STMT
  if (PartitionIndex_23 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 19>; [20.00%]

  <bb 19> [local count: 109362594]:
  return;

}


Power_Ip_MC_ME_ConfigureCorePartition1 (const struct Power_Ip_MC_ME_CoreConfigType * CoreConfigPtr, uint8 PartitionIndex)
{
  uint8 CoreIndex;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  uint32 CoreStatus;
  uint32 CoreConfig;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.15_1;
  int _2;
  int _3;
  long unsigned int TimeoutTicks.16_4;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.17_5;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 205922431]:
  # DEBUG BEGIN_STMT
  CoreConfig_13 = CoreConfigPtr_12(D)->CorePconfRegValue;
  # DEBUG CoreConfig => CoreConfig_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  CoreIndex_14 = CoreConfigPtr_12(D)->CoreIndex;
  # DEBUG CoreIndex => CoreIndex_14
  # DEBUG BEGIN_STMT
  if (CoreIndex_14 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 3> [local count: 137968029]:
  if (CoreIndex_14 == 2)
    goto <bb 4>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 4> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.15_1 = Power_Ip_pxMC_ME;
  _2 = (int) PartitionIndex_15(D);
  _3 = (int) CoreIndex_14;
  Power_Ip_pxMC_ME.15_1->McMePrtnArray[_2].McMePrtnCoreArray[_3].PRTN_CORE_PCONF ={v} CoreConfig_13;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerCoreUpdate (PartitionIndex_15(D), CoreIndex_14);
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.16_4 = TimeoutTicks;
  TimeoutOccurred_20 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.16_4);
  # DEBUG TimeoutOccurred => TimeoutOccurred_20
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.17_5 = Power_Ip_pxMC_ME;
  CoreStatus_21 ={v} Power_Ip_pxMC_ME.17_5->McMePrtnArray[_2].McMePrtnCoreArray[_3].PRTN_CORE_STAT;
  # DEBUG CoreStatus => CoreStatus_21
  # DEBUG BEGIN_STMT
  _7 = CoreConfig_13 ^ CoreStatus_21;
  _8 = _7 & 1;
  if (_8 != 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 6> [local count: 1014686025]:
  if (TimeoutOccurred_20 != 0)
    goto <bb 7>; [5.50%]
  else
    goto <bb 10>; [94.50%]

  <bb 10> [local count: 958878293]:
  goto <bb 5>; [100.00%]

  <bb 7> [local count: 114863532]:
  # TimeoutOccurred_6 = PHI <TimeoutOccurred_20(5), TimeoutOccurred_20(6)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_6 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 9> [local count: 205922431]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_ConfigureCore (const struct Power_Ip_MC_ME_CoreConfigType * CoreConfigPtr, uint8 PartitionIndex)
{
  uint8 CoreIndex;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  uint32 CoreStatus;
  uint32 CoreConfig;
  long unsigned int _2;
  long unsigned int TimeoutTicks.7_3;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.8_4;
  int _5;
  int _6;
  signed int CoreStatus.9_7;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.10_8;
  int _9;
  int _10;
  long unsigned int TimeoutTicks.11_11;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.12_12;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  CoreConfig_23 = CoreConfigPtr_22(D)->CorePconfRegValue;
  # DEBUG CoreConfig => CoreConfig_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  CoreIndex_24 = CoreConfigPtr_22(D)->CoreIndex;
  # DEBUG CoreIndex => CoreIndex_24
  # DEBUG BEGIN_STMT
  _2 = CoreConfig_23 & 1;
  if (_2 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.7_3 = TimeoutTicks;
  TimeoutOccurred_27 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.7_3);
  # DEBUG TimeoutOccurred => TimeoutOccurred_27
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.8_4 = Power_Ip_pxMC_ME;
  _5 = (int) PartitionIndex_28(D);
  _6 = (int) CoreIndex_24;
  CoreStatus_29 ={v} Power_Ip_pxMC_ME.8_4->McMePrtnArray[_5].McMePrtnCoreArray[_6].PRTN_CORE_STAT;
  # DEBUG CoreStatus => CoreStatus_29
  # DEBUG BEGIN_STMT
  CoreStatus.9_7 = (signed int) CoreStatus_29;
  if (CoreStatus.9_7 >= 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_27 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 17>; [94.50%]

  <bb 17> [local count: 958878292]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_1 = PHI <TimeoutOccurred_27(4), TimeoutOccurred_27(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_1 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 8> [local count: 348071309]:
  # TimeoutOccurred_16 = PHI <0(2), TimeoutOccurred_1(6), 1(7)>
  # DEBUG TimeoutOccurred => TimeoutOccurred_16
  # DEBUG BEGIN_STMT
  if (PartitionIndex_28(D) != 1)
    goto <bb 9>; [66.00%]
  else
    goto <bb 15>; [34.00%]

  <bb 9> [local count: 229727064]:
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_16 != 0)
    goto <bb 15>; [67.00%]
  else
    goto <bb 10>; [33.00%]

  <bb 10> [local count: 75809931]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.10_8 = Power_Ip_pxMC_ME;
  _9 = (int) PartitionIndex_28(D);
  _10 = (int) CoreIndex_24;
  Power_Ip_pxMC_ME.10_8->McMePrtnArray[_9].McMePrtnCoreArray[_10].PRTN_CORE_PCONF ={v} CoreConfig_23;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerCoreUpdate (PartitionIndex_28(D), CoreIndex_24);
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 11> [local count: 708669603]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.11_11 = TimeoutTicks;
  TimeoutOccurred_35 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.11_11);
  # DEBUG TimeoutOccurred => TimeoutOccurred_35
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.12_12 = Power_Ip_pxMC_ME;
  CoreStatus_36 ={v} Power_Ip_pxMC_ME.12_12->McMePrtnArray[_9].McMePrtnCoreArray[_10].PRTN_CORE_STAT;
  # DEBUG CoreStatus => CoreStatus_36
  # DEBUG BEGIN_STMT
  _14 = CoreConfig_23 ^ CoreStatus_36;
  _15 = _14 & 1;
  if (_15 != 0)
    goto <bb 12>; [94.50%]
  else
    goto <bb 13>; [5.50%]

  <bb 12> [local count: 669692775]:
  if (TimeoutOccurred_35 != 0)
    goto <bb 13>; [5.50%]
  else
    goto <bb 16>; [94.50%]

  <bb 16> [local count: 632859672]:
  goto <bb 11>; [100.00%]

  <bb 13> [local count: 75809931]:
  # TimeoutOccurred_13 = PHI <TimeoutOccurred_35(11), TimeoutOccurred_35(12)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_13 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [local count: 25017277]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 15> [local count: 348071308]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_ConfigureCOFB (const struct Power_Ip_MC_ME_CofbConfigType * CofbConfigPtr, uint8 PartitionIndex)
{
  uint8 CofbIndex;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  uint32 PeripheralsStatus;
  uint32 PeripheralsToUpdate;
  uint32 PeripheralsConfig;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.0_1;
  int _2;
  int _3;
  long unsigned int TimeoutTicks.1_4;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.2_5;
  long unsigned int _7;

  <bb 2> [local count: 234990859]:
  # DEBUG BEGIN_STMT
  PeripheralsConfig_12 = CofbConfigPtr_11(D)->CofbClkenRegValue;
  # DEBUG PeripheralsConfig => PeripheralsConfig_12
  # DEBUG BEGIN_STMT
  PeripheralsToUpdate_13 = CofbConfigPtr_11(D)->CofbBlocksToUpdateMask;
  # DEBUG PeripheralsToUpdate => PeripheralsToUpdate_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  CofbIndex_14 = CofbConfigPtr_11(D)->CofbIndex;
  # DEBUG CofbIndex => CofbIndex_14
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.0_1 = Power_Ip_pxMC_ME;
  _2 = (int) PartitionIndex_15(D);
  _3 = (int) CofbIndex_14;
  Power_Ip_pxMC_ME.0_1->McMePrtnArray[_2].PRTN_COFB_CLKEN[_3] ={v} PeripheralsConfig_12;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerCofbUpdate (PartitionIndex_15(D));
  # DEBUG BEGIN_STMT
  if (PartitionIndex_15(D) != 2)
    goto <bb 3>; [48.88%]
  else
    goto <bb 8>; [51.12%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.1_4 = TimeoutTicks;
  TimeoutOccurred_20 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_4);
  # DEBUG TimeoutOccurred => TimeoutOccurred_20
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.2_5 = Power_Ip_pxMC_ME;
  PeripheralsStatus_21 ={v} Power_Ip_pxMC_ME.2_5->McMePrtnArray[_2].PRTN_COFB_STAT[_3];
  # DEBUG PeripheralsStatus => PeripheralsStatus_21
  # DEBUG BEGIN_STMT
  _7 = PeripheralsToUpdate_13 & PeripheralsStatus_21;
  if (_7 != PeripheralsConfig_12)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686024]:
  if (TimeoutOccurred_20 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 9>; [94.50%]

  <bb 9> [local count: 958878294]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_6 = PHI <TimeoutOccurred_20(4), TimeoutOccurred_20(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_6 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 8> [local count: 234990859]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_ConfigurePartitionOutputSafe (const struct Power_Ip_MC_ME_PartitionConfigType * PartitionConfigPtr)
{
  uint8 PartitionIndex;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  uint32 PartitionStatus;
  uint32 PartitionTriggerMask;
  uint32 PartitionConfig;
  uint32 TempValue;
  long unsigned int _1;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.24_2;
  int _3;
  long unsigned int _4;
  long unsigned int TimeoutTicks.26_7;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.27_8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  PartitionConfig_15 = PartitionConfigPtr_14(D)->PartitionPconfRegValue;
  # DEBUG PartitionConfig => PartitionConfig_15
  # DEBUG BEGIN_STMT
  PartitionTriggerMask_16 = PartitionConfigPtr_14(D)->PartitionTriggerMask;
  # DEBUG PartitionTriggerMask => PartitionTriggerMask_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  PartitionIndex_17 = PartitionConfigPtr_14(D)->PartitionIndex;
  # DEBUG PartitionIndex => PartitionIndex_17
  # DEBUG BEGIN_STMT
  _1 = PartitionTriggerMask_16 & 4;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.24_2 = Power_Ip_pxMC_ME;
  _3 = (int) PartitionIndex_17;
  TempValue_18 ={v} Power_Ip_pxMC_ME.24_2->McMePrtnArray[_3].PRTN_PCONF;
  # DEBUG TempValue => TempValue_18
  # DEBUG BEGIN_STMT
  TempValue_19 = TempValue_18 & 4294967291;
  # DEBUG TempValue => TempValue_19
  # DEBUG BEGIN_STMT
  _4 = PartitionConfig_15 & 4;
  TempValue_20 = _4 | TempValue_19;
  # DEBUG TempValue => TempValue_20
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.24_2->McMePrtnArray[_3].PRTN_PCONF ={v} TempValue_20;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerPartitionUpdate (4, PartitionIndex_17);
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.26_7 = TimeoutTicks;
  TimeoutOccurred_25 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.26_7);
  # DEBUG TimeoutOccurred => TimeoutOccurred_25
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.27_8 = Power_Ip_pxMC_ME;
  PartitionStatus_26 ={v} Power_Ip_pxMC_ME.27_8->McMePrtnArray[_3].PRTN_STAT;
  # DEBUG PartitionStatus => PartitionStatus_26
  # DEBUG BEGIN_STMT
  _9 = PartitionConfig_15 ^ PartitionStatus_26;
  _10 = _9 & 4;
  if (_10 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_25 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 9>; [94.50%]

  <bb 9> [local count: 958878294]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_5 = PHI <TimeoutOccurred_25(4), TimeoutOccurred_25(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_5 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG D#4 => PartitionConfigPtr_14(D)
  Power_Ip_MC_ME_ConfigurePartitionOutputSafe.part.0 ();

  <bb 8> [local count: 348071309]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_ConfigurePartitionClock (const struct Power_Ip_MC_ME_PartitionConfigType * PartitionConfigPtr)
{
  uint8 PartitionIndex;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  uint32 PartitionStatus;
  uint32 PartitionTriggerMask;
  uint32 PartitionConfig;
  uint32 TempValue;
  long unsigned int _1;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.18_2;
  int _3;
  long unsigned int _4;
  long unsigned int TimeoutTicks.20_7;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.21_8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  PartitionConfig_15 = PartitionConfigPtr_14(D)->PartitionPconfRegValue;
  # DEBUG PartitionConfig => PartitionConfig_15
  # DEBUG BEGIN_STMT
  PartitionTriggerMask_16 = PartitionConfigPtr_14(D)->PartitionTriggerMask;
  # DEBUG PartitionTriggerMask => PartitionTriggerMask_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  PartitionIndex_17 = PartitionConfigPtr_14(D)->PartitionIndex;
  # DEBUG PartitionIndex => PartitionIndex_17
  # DEBUG BEGIN_STMT
  _1 = PartitionTriggerMask_16 & 1;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.18_2 = Power_Ip_pxMC_ME;
  _3 = (int) PartitionIndex_17;
  TempValue_18 ={v} Power_Ip_pxMC_ME.18_2->McMePrtnArray[_3].PRTN_PCONF;
  # DEBUG TempValue => TempValue_18
  # DEBUG BEGIN_STMT
  TempValue_19 = TempValue_18 & 4294967294;
  # DEBUG TempValue => TempValue_19
  # DEBUG BEGIN_STMT
  _4 = PartitionConfig_15 & 1;
  TempValue_20 = _4 | TempValue_19;
  # DEBUG TempValue => TempValue_20
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.18_2->McMePrtnArray[_3].PRTN_PCONF ={v} TempValue_20;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_TriggerPartitionUpdate (1, PartitionIndex_17);
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.20_7 = TimeoutTicks;
  TimeoutOccurred_25 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.20_7);
  # DEBUG TimeoutOccurred => TimeoutOccurred_25
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.21_8 = Power_Ip_pxMC_ME;
  PartitionStatus_26 ={v} Power_Ip_pxMC_ME.21_8->McMePrtnArray[_3].PRTN_STAT;
  # DEBUG PartitionStatus => PartitionStatus_26
  # DEBUG BEGIN_STMT
  _9 = PartitionConfig_15 ^ PartitionStatus_26;
  _10 = _9 & 1;
  if (_10 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_25 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 9>; [94.50%]

  <bb 9> [local count: 958878294]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_5 = PHI <TimeoutOccurred_25(4), TimeoutOccurred_25(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_5 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG D#2 => PartitionConfigPtr_14(D)
  Power_Ip_MC_ME_ConfigurePartitionClock.part.0 ();

  <bb 8> [local count: 348071309]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Power_Ip_MC_ME_TriggerCoreUpdate (uint8 PartitionIndex, uint8 CoreIndex)
{
  uint32 TempValue;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.13_1;
  int _2;
  int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.13_1 = Power_Ip_pxMC_ME;
  _2 = (int) PartitionIndex_5(D);
  _3 = (int) CoreIndex_6(D);
  TempValue_7 ={v} Power_Ip_pxMC_ME.13_1->McMePrtnArray[_2].McMePrtnCoreArray[_3].PRTN_CORE_PUPD;
  # DEBUG TempValue => TempValue_7
  # DEBUG BEGIN_STMT
  TempValue_8 = TempValue_7 & 4294967294;
  # DEBUG TempValue => TempValue_8
  # DEBUG BEGIN_STMT
  TempValue_9 = TempValue_8 | 1;
  # DEBUG TempValue => TempValue_9
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.13_1->McMePrtnArray[_2].McMePrtnCoreArray[_3].PRTN_CORE_PUPD ={v} TempValue_9;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_WriteControlKeys ();
  return;

}


Power_Ip_MC_ME_TriggerCofbUpdate (uint8 PartitionIndex)
{
  uint32 TempValue;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.3_1;
  int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.3_1 = Power_Ip_pxMC_ME;
  _2 = (int) PartitionIndex_4(D);
  TempValue_5 ={v} Power_Ip_pxMC_ME.3_1->McMePrtnArray[_2].PRTN_PUPD;
  # DEBUG TempValue => TempValue_5
  # DEBUG BEGIN_STMT
  TempValue_6 = TempValue_5 & 4294967294;
  # DEBUG TempValue => TempValue_6
  # DEBUG BEGIN_STMT
  TempValue_7 = TempValue_6 | 1;
  # DEBUG TempValue => TempValue_7
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.3_1->McMePrtnArray[_2].PRTN_PUPD ={v} TempValue_7;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_WriteControlKeys ();
  return;

}


Power_Ip_MC_ME_TriggerPartitionUpdate (uint32 TriggerMask, uint8 PartitionIndex)
{
  uint32 TempValue;
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.22_1;
  int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.22_1 = Power_Ip_pxMC_ME;
  _2 = (int) PartitionIndex_4(D);
  TempValue_5 ={v} Power_Ip_pxMC_ME.22_1->McMePrtnArray[_2].PRTN_PUPD;
  # DEBUG TempValue => TempValue_5
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => ~TriggerMask_6(D)
  # DEBUG TempValue => D#1 & TempValue_5
  # DEBUG BEGIN_STMT
  TempValue_7 = TempValue_5 | TriggerMask_6(D);
  # DEBUG TempValue => TempValue_7
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.22_1->McMePrtnArray[_2].PRTN_PUPD ={v} TempValue_7;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_WriteControlKeys ();
  return;

}


Power_Ip_MC_ME_TriggerModeUpdate ()
{
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.30_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.30_1 = Power_Ip_pxMC_ME;
  Power_Ip_pxMC_ME.30_1->MODE_UPD ={v} 1;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_WriteControlKeys ();
  return;

}


Power_Ip_MC_ME_WriteControlKeys ()
{
  struct Power_Ip_MC_ME_Type * Power_Ip_pxMC_ME.5_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.5_1 = Power_Ip_pxMC_ME;
  Power_Ip_pxMC_ME.5_1->CTL_KEY ={v} 23280;
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_ME.5_1->CTL_KEY ={v} 42255;
  return;

}


