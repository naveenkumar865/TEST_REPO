Power_Ip_InstallNotificationsCallback (void (*Power_Ip_ReportErrorsCallbackType) (Power_Ip_ReportErrorType, uint8) ReportErrorsCallback)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Power_Ip_pfReportErrorsCallback = ReportErrorsCallback_2(D);
  return;

}


Power_Ip_Init (const struct Power_Ip_HwIPsConfigType * HwIPsConfigPtr)
{
  const struct Power_Ip_MC_RGM_ConfigType * _1;
  const struct Power_Ip_PMC_ConfigType * _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = HwIPsConfigPtr_4(D)->McRgmConfigPtr;
  Power_Ip_MC_RGM_ResetInit (_1);
  # DEBUG BEGIN_STMT
  _2 = HwIPsConfigPtr_4(D)->PMCConfigPtr;
  Power_Ip_PMC_PowerInit (_2);
  return;

}


Power_Ip_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;
  Power_Ip_RawResetType _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResetReason_3 = Power_Ip_MC_RGM_GetResetRawValue ();
  # DEBUG ResetReason => ResetReason_3
  # DEBUG BEGIN_STMT
  _4 = ResetReason_3;
  return _4;

}


Power_Ip_GetResetReason ()
{
  Power_Ip_ResetType ResetReason;
  Power_Ip_ResetType _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ResetReason_1 = 28;
  # DEBUG ResetReason => ResetReason_1
  # DEBUG BEGIN_STMT
  ResetReason_4 = Power_Ip_MC_RGM_GetResetReason ();
  # DEBUG ResetReason => ResetReason_4
  # DEBUG BEGIN_STMT
  _5 = ResetReason_4;
  return _5;

}


Power_Ip_SetMode (const struct Power_Ip_ModeConfigType * ModeConfigPtr)
{
  Power_Ip_MSCM_CpxType McuCpxType;
  Power_Ip_PowerModeType PowerMode;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PowerMode_4 = ModeConfigPtr_3(D)->PowerMode;
  # DEBUG PowerMode => PowerMode_4
  # DEBUG BEGIN_STMT
  Power_Ip_OnOffPartCoreCofb (ModeConfigPtr_3(D));
  # DEBUG BEGIN_STMT
  if (PowerMode_4 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_SocTriggerResetEvent (PowerMode_4);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PowerMode_4 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  McuCpxType_7 = Power_Ip_MSCM_GetPersonality ();
  # DEBUG McuCpxType => McuCpxType_7
  # DEBUG BEGIN_STMT
  if (McuCpxType_7 == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Power_Ip_CortexM_WarmReset ();
  # DEBUG BEGIN_STMT

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Power_Ip_OnOffPartCoreCofb (const struct Power_Ip_ModeConfigType * ModeConfigPtr)
{
  const struct Power_Ip_MC_ME_ModeConfigType * _1;
  const struct Power_Ip_MC_RGM_ModeConfigType * _2;
  const struct Power_Ip_MC_ME_ModeConfigType * _3;
  const struct Power_Ip_MC_ME_ModeConfigType * _4;
  const struct Power_Ip_MC_RGM_ModeConfigType * _5;
  const struct Power_Ip_MC_ME_ModeConfigType * _6;
  const struct Power_Ip_MC_ME_ModeConfigType * _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_9(D)->McMeModeConfigPtr;
  Power_Ip_MC_ME_EnablePartitionClock (_1);
  # DEBUG BEGIN_STMT
  _2 = ModeConfigPtr_9(D)->McRgmModeConfigPtr;
  Power_Ip_MC_RGM_EnableResetDomain (_2);
  # DEBUG BEGIN_STMT
  _3 = ModeConfigPtr_9(D)->McMeModeConfigPtr;
  Power_Ip_MC_ME_DisablePartitionOutputSafe (_3);
  # DEBUG BEGIN_STMT
  _4 = ModeConfigPtr_9(D)->McMeModeConfigPtr;
  Power_Ip_MC_ME_ConfigCoreCOFBClock (_4);
  # DEBUG BEGIN_STMT
  Power_Ip_ConfigPartCoreCofbReset (ModeConfigPtr_9(D));
  # DEBUG BEGIN_STMT
  _5 = ModeConfigPtr_9(D)->McRgmModeConfigPtr;
  Power_Ip_MC_RGM_DisableResetDomain (_5);
  # DEBUG BEGIN_STMT
  _6 = ModeConfigPtr_9(D)->McMeModeConfigPtr;
  Power_Ip_MC_ME_DisablePartitionClock (_6);
  # DEBUG BEGIN_STMT
  _7 = ModeConfigPtr_9(D)->McMeModeConfigPtr;
  Power_Ip_MC_ME_EnablePartitionOutputSafe (_7);
  return;

}


Power_Ip_ConfigPartCoreCofbReset (const struct Power_Ip_ModeConfigType * ModeConfigPtr)
{
  const struct Power_Ip_MC_RGM_ModeConfigType * _1;
  const struct Power_Ip_MC_RGM_ModeConfigType * _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ModeConfigPtr_4(D)->McRgmModeConfigPtr;
  Power_Ip_MC_RGM_ModeConfig (_1);
  # DEBUG BEGIN_STMT
  _2 = ModeConfigPtr_4(D)->McRgmModeConfigPtr;
  Power_Ip_MC_RGM_CheckModeConfig (_2);
  return;

}


