IPA function summary for Clock_Ip_DistributePll.part.0/54 inlinable
  global time:     425.545456
  self size:       31
  global size:     31
  min size:       20
  self stack:      0
  global stack:    0
    size:18.000000, time:153.636364
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_SpecificPeripheralClockInitialization/45 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16

IPA function summary for Clock_Ip_GetPllStatus.part.0/53 inlinable
  global time:     190.795606
  self size:       17
  global size:     17
  min size:       10
  self stack:      0
  global stack:    0
    size:9.000000, time:65.879976
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 1 freq:7.23 size: 5 time: 17

IPA function summary for Clock_Ip_UpdateDriverContext.isra.0/52 inlinable
  global time:     15.500000
  self size:       8
  global size:     8
  min size:       2
  self stack:      0
  global stack:    0
    size:4.000000, time:3.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_CallEmptyCallbacks/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size:44 stack: 0

IPA function summary for Clock_Ip_GetConfiguredFrequencyValue/21 inlinable
  global time:     49.365506
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:47.365506
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_TimeoutExpired/20 inlinable
  global time:     19.000000
  self size:       11
  global size:     11
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/51 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for Clock_Ip_StartTimeout/19 inlinable
  global time:     30.000000
  self size:       13
  global size:     13
  min size:       14
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
  calls:
    OsIf_MicrosToTicks/50 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant
    OsIf_GetCounter/49 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant

IPA function summary for Clock_Ip_ReportClockErrors/18 inlinable
  global time:     20.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_EnableModuleClock/17 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableModuleClock/16 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_InstallNotificationsCallback/15 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_ClearClockMonitorStatus/14 inlinable
  global time:     21.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_GetClockMonitorStatus/13 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableClockMonitor/12 inlinable
  global time:     21.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_DistributePll/11 inlinable
  global time:     102.885455
  self size:       27
  global size:     27
  min size:       10
  self stack:      0
  global stack:    0
    size:19.000000, time:66.575273
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll.part.0/54 function not considered for inlining
      loop depth: 0 freq:0.35 size: 1 time: 10callee size:15 stack: 0
    indirect call loop depth: 1 freq:1.93 size: 4 time: 16

IPA function summary for Clock_Ip_GetPllStatus/10 inlinable
  global time:     102.401640
  self size:       23
  global size:     23
  min size:       14
  self stack:      0
  global stack:    0
    size:13.000000, time:39.163935
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetPllStatus.part.0/53 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0
    indirect call loop depth: 1 freq:3.28 size: 5 time: 17

IPA function summary for Clock_Ip_InitClock/9 inlinable
  global time:     1583.539959
  self size:       203
  global size:     203
  min size:       134
  self stack:      0
  global stack:    0
    size:117.500000, time:505.520291
    size:18.500000, time:74.638483,  executed if:(not inlined)
  calls:
    Clock_Ip_SpecificPeripheralClockInitialization/45 function body not available
      loop depth: 0 freq:0.50 size: 2 time: 11
    Clock_Ip_UpdateDriverContext.isra.0/52 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 4 stack: 0
    Clock_Ip_ResetClockConfiguration/7 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:25 stack: 0
       op0 change 99.990000% of time
    Clock_Ip_SpecificPlatformInitClock/22 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:5.34 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:3.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:5.66 size: 4 time: 16

IPA function summary for Clock_Ip_Init/8 inlinable
  global time:     21.379000
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:3.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll/11 function not considered for inlining
      loop depth: 0 freq:0.11 size: 1 time: 10callee size:13 stack: 0
    Clock_Ip_GetPllStatus/10 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:11 stack: 0
    Clock_Ip_InitClock/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:101 stack: 0

IPA function summary for Clock_Ip_ResetClockConfiguration/7 inlinable
  global time:     501.181821
  self size:       51
  global size:     51
  min size:       32
  self stack:      0
  global stack:    0
    size:27.500000, time:147.181819
    size:6.500000, time:14.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 56] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 56] changed)
  loop iterations:(op0[ref offset: 56] changed)
  calls:
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16

IPA function summary for Clock_Ip_CallEmptyCallbacks/6 inlinable
  global time:     142.000000
  self size:       88
  global size:     88
  min size:       130
  self stack:      0
  global stack:    0
    size:20.000000, time:11.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16

IPA function summary for Clock_Ip_NotificatonsEmptyCallback/4 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 3316.594444 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Clock_Ip_DistributePll.part.0/54.
Enqueueing calls in Clock_Ip_GetPllStatus.part.0/53.
Enqueueing calls in Clock_Ip_UpdateDriverContext.isra.0/52.
Enqueueing calls in Clock_Ip_GetConfiguredFrequencyValue/21.
Enqueueing calls in Clock_Ip_TimeoutExpired/20.
Enqueueing calls in Clock_Ip_StartTimeout/19.
Enqueueing calls in Clock_Ip_ReportClockErrors/18.
Enqueueing calls in Clock_Ip_EnableModuleClock/17.
Enqueueing calls in Clock_Ip_DisableModuleClock/16.
Enqueueing calls in Clock_Ip_InstallNotificationsCallback/15.
Enqueueing calls in Clock_Ip_ClearClockMonitorStatus/14.
Enqueueing calls in Clock_Ip_GetClockMonitorStatus/13.
Enqueueing calls in Clock_Ip_DisableClockMonitor/12.
Enqueueing calls in Clock_Ip_DistributePll/11.
Enqueueing calls in Clock_Ip_GetPllStatus/10.
Enqueueing calls in Clock_Ip_InitClock/9.
Enqueueing calls in Clock_Ip_Init/8.
Enqueueing calls in Clock_Ip_ResetClockConfiguration/7.
Enqueueing calls in Clock_Ip_CallEmptyCallbacks/6.
Enqueueing calls in Clock_Ip_NotificatonsEmptyCallback/4.

Considering Clock_Ip_GetPllStatus.part.0/53 with 17 size
 to be inlined into Clock_Ip_GetPllStatus/10 in unknown:0
 Estimated badness is -0.061905, frequency 0.50.

Considering Clock_Ip_UpdateDriverContext.isra.0/52 with 8 size
 to be inlined into Clock_Ip_InitClock/9 in ../RTD/src/Clock_Ip.c:733
 Estimated badness is -0.057971, frequency 1.00.

Considering Clock_Ip_DistributePll.part.0/54 with 31 size
 to be inlined into Clock_Ip_DistributePll/11 in unknown:0
 Estimated badness is -0.011523, frequency 0.35.

Considering Clock_Ip_ResetClockConfiguration/7 with 51 size
 to be inlined into Clock_Ip_InitClock/9 in ../RTD/src/Clock_Ip.c:713
 Estimated badness is -0.009948, frequency 1.00.

Considering Clock_Ip_CallEmptyCallbacks/6 with 88 size
 to be inlined into Clock_Ip_UpdateDriverContext.isra.0/52 in ../RTD/src/Clock_Ip.c:229
 Estimated badness is -0.001991, frequency 1.00.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 2884.301144 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        6 calls, 4.850000 freq, 0 count
--param max-inline-insns-auto limit reached       :        3 calls, 1.438900 freq, 0 count
IPA function summary for Clock_Ip_GetConfiguredFrequencyValue/21 inlinable
  global time:     49.365506
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:47.365506
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_TimeoutExpired/20 inlinable
  global time:     19.000000
  self size:       11
  global size:     11
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/51 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for Clock_Ip_StartTimeout/19 inlinable
  global time:     30.000000
  self size:       13
  global size:     13
  min size:       14
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
  calls:
    OsIf_MicrosToTicks/50 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant
    OsIf_GetCounter/49 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant

IPA function summary for Clock_Ip_ReportClockErrors/18 inlinable
  global time:     20.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_EnableModuleClock/17 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableModuleClock/16 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_InstallNotificationsCallback/15 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_ClearClockMonitorStatus/14 inlinable
  global time:     21.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_GetClockMonitorStatus/13 inlinable
  global time:     22.000000
  self size:       11
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableClockMonitor/12 inlinable
  global time:     21.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_DistributePll/11 inlinable
  global time:     247.626365
  self size:       27
  global size:     54
  min size:       37
  self stack:      0
  global stack:    0
  estimated growth:23
    size:37.000000, time:120.348001
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll.part.0/54 inlined
      loop depth: 0 freq:0.35 size: 1 time: 10callee size:15 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Clock_Ip_SpecificPeripheralClockInitialization/45 function body not available
        loop depth: 0 freq:0.35 size: 2 time: 11
      indirect call loop depth: 1 freq:2.83 size: 4 time: 16
      indirect call loop depth: 1 freq:2.83 size: 4 time: 16
    indirect call loop depth: 1 freq:1.93 size: 4 time: 16

IPA function summary for Clock_Ip_GetPllStatus/10 inlinable
  global time:     191.299444
  self size:       23
  global size:     35
  min size:       22
  self stack:      0
  global stack:    0
  estimated growth:18
    size:22.000000, time:72.103923
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetPllStatus.part.0/53 inlined
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      indirect call loop depth: 1 freq:3.62 size: 5 time: 17
    indirect call loop depth: 1 freq:3.28 size: 5 time: 17

IPA function summary for Clock_Ip_InitClock/9 inlinable
  global time:     2192.630825
  self size:       203
  global size:     333
  min size:       704
  self stack:      0
  global stack:    0
  estimated growth:183
    size:169.500000, time:668.202062
    size:18.500000, time:74.638483,  executed if:(not inlined)
  calls:
    Clock_Ip_SpecificPeripheralClockInitialization/45 function body not available
      loop depth: 0 freq:0.50 size: 2 time: 11
    Clock_Ip_UpdateDriverContext.isra.0/52 inlined
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Clock_Ip_CallEmptyCallbacks/6 inlined
        loop depth: 0 freq:1.00 size: 1 time: 10callee size:44 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 5 time: 17
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    Clock_Ip_ResetClockConfiguration/7 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:25 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      indirect call loop depth: 1 freq:1.00 size: 4 time: 16
      indirect call loop depth: 1 freq:4.00 size: 4 time: 16
      indirect call loop depth: 1 freq:8.09 size: 4 time: 16
      indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    Clock_Ip_SpecificPlatformInitClock/22 function body not available
      loop depth: 0 freq:1.00 size: 2 time: 11
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:5.34 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:3.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:5.66 size: 4 time: 16

IPA function summary for Clock_Ip_Init/8 inlinable
  global time:     21.379000
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:3.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll/11 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.11 size: 1 time: 10callee size:27 stack: 0
    Clock_Ip_GetPllStatus/10 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:17 stack: 0
    Clock_Ip_InitClock/9 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:166 stack: 0

IPA function summary for Clock_Ip_NotificatonsEmptyCallback/4 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_DistributePll.part.0/54 (Clock_Ip_DistributePll.part.0) @06131000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8GateCallbackIndex/43 (read)Clock_Ip_axGateCallbacks/44 (read)Clock_Ip_pxConfig/2 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_pxConfig/2 (read)
  Referring: 
  Function Clock_Ip_DistributePll.part.0/54 is inline copy in Clock_Ip_DistributePll/11
  Availability: local
  Function flags: count:59055800 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_DistributePll/11 (inlined) (59055800 (estimated locally),0.35 per call) 
  Calls: Clock_Ip_SpecificPeripheralClockInitialization/45 (59055800 (estimated locally),0.35 per call) 
   Indirect call(477815110 (estimated locally),2.83 per call) 
   Indirect call(477815112 (estimated locally),2.83 per call) 
Clock_Ip_GetPllStatus.part.0/53 (Clock_Ip_GetPllStatus.part.0) @06131a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_aeHwDfsName/48 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8FractionalDividerCallbackIndex/38 (read)Clock_Ip_axFracDivCallbacks/39 (read)
  Referring: 
  Function Clock_Ip_GetPllStatus.part.0/53 is inline copy in Clock_Ip_GetPllStatus/10
  Availability: local
  Function flags: count:130996503 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_GetPllStatus/10 (inlined) (130996503 (estimated locally),0.50 per call) 
  Calls: 
   Indirect call(947148100 (estimated locally),3.62 per call) 
Clock_Ip_UpdateDriverContext.isra.0/52 (Clock_Ip_UpdateDriverContext.isra.0) @06041e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_bObjectsAreInitialized/1 (read)Clock_Ip_bObjectsAreInitialized/1 (write)
  Referring: 
  Function Clock_Ip_UpdateDriverContext.isra.0/52 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111598 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (inlined) (118111598 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_CallEmptyCallbacks/6 (inlined) (118111598 (estimated locally),1.00 per call) 
OsIf_GetElapsed/51 (OsIf_GetElapsed) @060237e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TimeoutExpired/20 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_MicrosToTicks/50 (OsIf_MicrosToTicks) @06023620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/19 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetCounter/49 (OsIf_GetCounter) @06023540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/19 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_aeHwDfsName/48 (Clock_Ip_aeHwDfsName) @06019d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus.part.0/53 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeHwPllName/47 (Clock_Ip_aeHwPllName) @06019c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
FunctionWasCalled.6588/46 (FunctionWasCalled) @06012e10
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_SpecificPeripheralClockInitialization/45 (Clock_Ip_SpecificPeripheralClockInitialization) @05fccd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_DistributePll.part.0/54 (59055800 (estimated locally),0.35 per call) Clock_Ip_InitClock/9 (59055800 (estimated locally),0.50 per call) 
  Calls: 
Clock_Ip_axGateCallbacks/44 (Clock_Ip_axGateCallbacks) @060121f8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8GateCallbackIndex/43 (Clock_Ip_au8GateCallbackIndex) @060121b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axSelectorCallbacks/42 (Clock_Ip_axSelectorCallbacks) @060120d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8SelectorCallbackIndex/41 (Clock_Ip_au8SelectorCallbackIndex) @06012090
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeSourceTypeClockName/40 (Clock_Ip_aeSourceTypeClockName) @06012048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axFracDivCallbacks/39 (Clock_Ip_axFracDivCallbacks) @05febf30
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_GetPllStatus.part.0/53 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8FractionalDividerCallbackIndex/38 (Clock_Ip_au8FractionalDividerCallbackIndex) @05febee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_GetPllStatus.part.0/53 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPllCallbacks/37 (Clock_Ip_axPllCallbacks) @05febc60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PllCallbackIndex/36 (Clock_Ip_au8PllCallbackIndex) @05febc18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerCallbacks/35 (Clock_Ip_axDividerCallbacks) @05febab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerCallbackIndex/34 (Clock_Ip_au8DividerCallbackIndex) @05feba68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerTriggerCallbacks/33 (Clock_Ip_axDividerTriggerCallbacks) @05feb990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerTriggerCallbackIndex/32 (Clock_Ip_au8DividerTriggerCallbackIndex) @05feb948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPcfsCallbacks/31 (Clock_Ip_axPcfsCallbacks) @05feb870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PcfsCallbackIndex/30 (Clock_Ip_au8PcfsCallbackIndex) @05feb828
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axExtOscCallbacks/29 (Clock_Ip_axExtOscCallbacks) @05feb708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8XoscCallbackIndex/28 (Clock_Ip_au8XoscCallbackIndex) @05feb6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axIntOscCallbacks/27 (Clock_Ip_axIntOscCallbacks) @05feb5e8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8IrcoscCallbackIndex/26 (Clock_Ip_au8IrcoscCallbackIndex) @05feb5a0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axCmuCallbacks/25 (Clock_Ip_axCmuCallbacks) @05feb480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8CmuCallbackIndex/24 (Clock_Ip_au8CmuCallbackIndex) @05feb438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/23 (Clock_Ip_au8ClockFeatures) @05feb3f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus.part.0/53 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_SpecificPlatformInitClock/22 (Clock_Ip_SpecificPlatformInitClock) @05fccb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_InitClock/9 (118111597 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_GetConfiguredFrequencyValue/21 (Clock_Ip_GetConfiguredFrequencyValue) @05fcc460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/2 (read)
  Referring: 
  Availability: available
  Function flags: count:164090760 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_TimeoutExpired/20 (Clock_Ip_TimeoutExpired) @05fcc1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/51 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_StartTimeout/19 (Clock_Ip_StartTimeout) @05fc5d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_MicrosToTicks/50 (1073741824 (estimated locally),1.00 per call) OsIf_GetCounter/49 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ReportClockErrors/18 (Clock_Ip_ReportClockErrors) @05fc57e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_EnableModuleClock/17 (Clock_Ip_EnableModuleClock) @05fc52a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8GateCallbackIndex/43 (read)Clock_Ip_axGateCallbacks/44 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableModuleClock/16 (Clock_Ip_DisableModuleClock) @05fc5ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8GateCallbackIndex/43 (read)Clock_Ip_axGateCallbacks/44 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_InstallNotificationsCallback/15 (Clock_Ip_InstallNotificationsCallback) @05fc5c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_ClearClockMonitorStatus/14 (Clock_Ip_ClearClockMonitorStatus) @05fc59a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_GetClockMonitorStatus/13 (Clock_Ip_GetClockMonitorStatus) @05fc5700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableClockMonitor/12 (Clock_Ip_DisableClockMonitor) @05fc5460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DistributePll/11 (Clock_Ip_DistributePll) @05fc51c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/2 (read)Clock_Ip_aeSourceTypeClockName/40 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8SelectorCallbackIndex/41 (read)Clock_Ip_axSelectorCallbacks/42 (read)Clock_Ip_pxConfig/2 (read)Clock_Ip_bClockTreeIsConsumingPll/0 (read)
  Referring: 
  Availability: available
  Function flags: count:168730857 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (116930485 (estimated locally),0.11 per call) 
  Calls: Clock_Ip_DistributePll.part.0/54 (inlined) (59055800 (estimated locally),0.35 per call) 
   Indirect call(324914276 (estimated locally),1.93 per call) 
Clock_Ip_GetPllStatus/10 (Clock_Ip_GetPllStatus) @05fabe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_aeHwPllName/47 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8PllCallbackIndex/36 (read)Clock_Ip_axPllCallbacks/37 (read)
  Referring: 
  Availability: available
  Function flags: count:261993004 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (354334802 (estimated locally),0.33 per call) 
  Calls: Clock_Ip_GetPllStatus.part.0/53 (inlined) (130996503 (estimated locally),0.50 per call) 
   Indirect call(858993459 (estimated locally),3.28 per call) 
Clock_Ip_InitClock/9 (Clock_Ip_InitClock) @05fab8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/2 (write)Clock_Ip_pxConfig/2 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8IrcoscCallbackIndex/26 (read)Clock_Ip_axIntOscCallbacks/27 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8XoscCallbackIndex/28 (read)Clock_Ip_axExtOscCallbacks/29 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8PcfsCallbackIndex/30 (read)Clock_Ip_axPcfsCallbacks/31 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8DividerTriggerCallbackIndex/32 (read)Clock_Ip_axDividerTriggerCallbacks/33 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8DividerCallbackIndex/34 (read)Clock_Ip_axDividerCallbacks/35 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8DividerTriggerCallbackIndex/32 (read)Clock_Ip_axDividerTriggerCallbacks/33 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8PllCallbackIndex/36 (read)Clock_Ip_axPllCallbacks/37 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8XoscCallbackIndex/28 (read)Clock_Ip_axExtOscCallbacks/29 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8PllCallbackIndex/36 (read)Clock_Ip_axPllCallbacks/37 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8FractionalDividerCallbackIndex/38 (read)Clock_Ip_axFracDivCallbacks/39 (read)Clock_Ip_bClockTreeIsConsumingPll/0 (write)Clock_Ip_aeSourceTypeClockName/40 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8SelectorCallbackIndex/41 (read)Clock_Ip_axSelectorCallbacks/42 (read)Clock_Ip_bClockTreeIsConsumingPll/0 (write)Clock_Ip_bClockTreeIsConsumingPll/0 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8GateCallbackIndex/43 (read)Clock_Ip_axGateCallbacks/44 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8CmuCallbackIndex/24 (read)Clock_Ip_axCmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: count:118111597 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_SpecificPeripheralClockInitialization/45 (59055800 (estimated locally),0.50 per call) Clock_Ip_UpdateDriverContext.isra.0/52 (inlined) (118111598 (estimated locally),1.00 per call) Clock_Ip_ResetClockConfiguration/7 (inlined) (118111598 (estimated locally),1.00 per call) Clock_Ip_SpecificPlatformInitClock/22 (118111597 (estimated locally),1.00 per call) 
   Indirect call(477815111 (estimated locally),4.05 per call) 
   Indirect call(477815109 (estimated locally),4.05 per call) 
   Indirect call(630715942 (estimated locally),5.34 per call) 
   Indirect call(955630225 (estimated locally),8.09 per call) 
   Indirect call(472446400 (estimated locally),4.00 per call) 
   Indirect call(118111600 (estimated locally),1.00 per call) 
   Indirect call(955630216 (estimated locally),8.09 per call) 
   Indirect call(472446396 (estimated locally),4.00 per call) 
   Indirect call(118111599 (estimated locally),1.00 per call) 
   Indirect call(955630205 (estimated locally),8.09 per call) 
   Indirect call(118111598 (estimated locally),1.00 per call) 
   Indirect call(354334794 (estimated locally),3.00 per call) 
   Indirect call(118111598 (estimated locally),1.00 per call) 
   Indirect call(236258633 (estimated locally),2.00 per call) 
   Indirect call(668941142 (estimated locally),5.66 per call) 
Clock_Ip_Init/8 (Clock_Ip_Init) @05fab380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_bClockTreeIsConsumingPll/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_DistributePll/11 (116930485 (estimated locally),0.11 per call) Clock_Ip_GetPllStatus/10 (354334802 (estimated locally),0.33 per call) Clock_Ip_InitClock/9 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ResetClockConfiguration/7 (Clock_Ip_ResetClockConfiguration) @05fabd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8SelectorCallbackIndex/41 (read)Clock_Ip_axSelectorCallbacks/42 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8FractionalDividerCallbackIndex/38 (read)Clock_Ip_axFracDivCallbacks/39 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8PllCallbackIndex/36 (read)Clock_Ip_axPllCallbacks/37 (read)Clock_Ip_au8ClockFeatures/23 (read)Clock_Ip_au8XoscCallbackIndex/28 (read)Clock_Ip_axExtOscCallbacks/29 (read)
  Referring: 
  Function Clock_Ip_ResetClockConfiguration/7 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111598 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (inlined) (118111598 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(118111599 (estimated locally),1.00 per call) 
   Indirect call(472446397 (estimated locally),4.00 per call) 
   Indirect call(955630208 (estimated locally),8.09 per call) 
   Indirect call(955630204 (estimated locally),8.09 per call) 
Clock_Ip_CallEmptyCallbacks/6 (Clock_Ip_CallEmptyCallbacks) @05faba80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: FunctionWasCalled.6588/46 (read)FunctionWasCalled.6588/46 (write)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_axCmuCallbacks/25 (read)Clock_Ip_axDividerCallbacks/35 (read)Clock_Ip_axDividerTriggerCallbacks/33 (read)Clock_Ip_axExtOscCallbacks/29 (read)Clock_Ip_axFracDivCallbacks/39 (read)Clock_Ip_axFracDivCallbacks/39 (read)Clock_Ip_axGateCallbacks/44 (read)Clock_Ip_axGateCallbacks/44 (read)Clock_Ip_axIntOscCallbacks/27 (read)Clock_Ip_axPllCallbacks/37 (read)Clock_Ip_axPllCallbacks/37 (read)Clock_Ip_axSelectorCallbacks/42 (read)Clock_Ip_axPcfsCallbacks/31 (read)
  Referring: 
  Function Clock_Ip_CallEmptyCallbacks/6 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111598 (estimated locally) body local optimize_size
  Called by: Clock_Ip_UpdateDriverContext.isra.0/52 (inlined) (118111598 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
   Indirect call(59055799 (estimated locally),0.50 per call) 
Clock_Ip_NotificatonsEmptyCallback/4 (Clock_Ip_NotificatonsEmptyCallback) @05fab540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_pfkNotificationsCallback/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_pfkNotificationsCallback/3 (Clock_Ip_pfkNotificationsCallback) @05fad360
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_NotificatonsEmptyCallback/4 (addr)
  Referring: Clock_Ip_InstallNotificationsCallback/15 (write)Clock_Ip_ReportClockErrors/18 (read)
  Availability: available
  Varpool flags: initialized
Clock_Ip_pxConfig/2 (Clock_Ip_pxConfig) @05fa5e10
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Clock_Ip_InitClock/9 (write)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DistributePll.part.0/54 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_GetConfiguredFrequencyValue/21 (read)
  Availability: available
  Varpool flags:
Clock_Ip_bObjectsAreInitialized/1 (Clock_Ip_bObjectsAreInitialized) @05fa5dc8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_UpdateDriverContext.isra.0/52 (read)Clock_Ip_UpdateDriverContext.isra.0/52 (write)
  Availability: available
  Varpool flags:
Clock_Ip_bClockTreeIsConsumingPll/0 (Clock_Ip_bClockTreeIsConsumingPll) @05fa5d38
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_InitClock/9 (write)Clock_Ip_InitClock/9 (write)Clock_Ip_Init/8 (read)
  Availability: available
  Varpool flags:

;; Function Clock_Ip_NotificatonsEmptyCallback (Clock_Ip_NotificatonsEmptyCallback, funcdef_no=0, decl_uid=6570, cgraph_uid=1, symbol_order=4)

Clock_Ip_NotificatonsEmptyCallback (Clock_Ip_NotificationType Notification, Clock_Ip_NameType ClockName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_InitClock (Clock_Ip_InitClock, funcdef_no=5, decl_uid=5761, cgraph_uid=6, symbol_order=9)


Symbols to be put in SSA form
{ D.6789 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 76
Number of blocks to update: 75 ( 99%)


Merging blocks 5 and 54
Removing basic block 10
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 66
Removing basic block 67
Removing basic block 68
Merging blocks 71 and 73
Removing basic block 72
;; 20 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
;;
;; Loop 15
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54
;;
;; Loop 14
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51
;;
;; Loop 13
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 46 47 45
;;
;; Loop 12
;;  header 43, latch 42
;;  depth 1, outer 0
;;  nodes: 43 42
;;
;; Loop 11
;;  header 41, latch 40
;;  depth 1, outer 0
;;  nodes: 41 40
;;
;; Loop 10
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38
;;
;; Loop 9
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36
;;
;; Loop 8
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34
;;
;; Loop 7
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32
;;
;; Loop 6
;;  header 31, latch 30
;;  depth 1, outer 0
;;  nodes: 31 30
;;
;; Loop 5
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28
;;
;; Loop 4
;;  header 27, latch 26
;;  depth 1, outer 0
;;  nodes: 27 26
;;
;; Loop 3
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17
;;
;; Loop 16
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 17
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 18
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 19
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 5 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 18 }
;; 17 succs { 18 }
;; 18 succs { 17 20 }
;; 19 succs { 20 }
;; 20 succs { 19 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 26 29 }
;; 28 succs { 29 }
;; 29 succs { 28 31 }
;; 30 succs { 31 }
;; 31 succs { 30 33 }
;; 32 succs { 33 }
;; 33 succs { 32 35 }
;; 34 succs { 35 }
;; 35 succs { 34 37 }
;; 36 succs { 37 }
;; 37 succs { 36 39 }
;; 38 succs { 39 }
;; 39 succs { 38 41 }
;; 40 succs { 41 }
;; 41 succs { 40 43 }
;; 42 succs { 43 }
;; 43 succs { 42 44 }
;; 44 succs { 49 }
;; 45 succs { 46 47 }
;; 46 succs { 48 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 45 50 }
;; 50 succs { 52 56 }
;; 51 succs { 52 }
;; 52 succs { 51 53 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 54 56 }
;; 56 succs { 1 }
Clock_Ip_InitClock (const struct Clock_Ip_ClockConfigType * Config)
{
  static boolean FunctionWasCalled = 0;
  uint32 CallbackIndex;
  uint32 Index;
  uint32 Index;
  uint32 CallbackIndex;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.1_1;
  <unnamed type> _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  void (*<T695>) (const struct Clock_Ip_CmuConfigType *) _6;
  const struct Clock_Ip_CmuConfigType * _7;
  unsigned char _8;
  long unsigned int _9;
  <unnamed type> _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  void (*<T621>) (const struct Clock_Ip_IrcoscConfigType *) _14;
  const struct Clock_Ip_IrcoscConfigType * _15;
  unsigned char _16;
  long unsigned int _17;
  <unnamed type> _18;
  unsigned char _19;
  int _20;
  unsigned char _21;
  void (*<T630>) (const struct Clock_Ip_XoscConfigType *) _22;
  const struct Clock_Ip_XoscConfigType * _23;
  unsigned char _24;
  long unsigned int _25;
  <unnamed type> _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  void (*<T6a7>) (const struct Clock_Ip_PcfsConfigType *) _30;
  const struct Clock_Ip_PcfsConfigType * _31;
  unsigned char _32;
  long unsigned int _33;
  <unnamed type> _34;
  unsigned char _35;
  int _36;
  unsigned char _37;
  void (*<T649>) (const struct Clock_Ip_DividerTriggerConfigType *) _38;
  const struct Clock_Ip_DividerTriggerConfigType * _39;
  unsigned char _40;
  long unsigned int _41;
  <unnamed type> _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  void (*<T63e>) (const struct Clock_Ip_DividerConfigType *) _46;
  const struct Clock_Ip_DividerConfigType * _47;
  unsigned char _48;
  long unsigned int _49;
  <unnamed type> _50;
  unsigned char _51;
  int _52;
  unsigned char _53;
  void (*<T649>) (const struct Clock_Ip_DividerTriggerConfigType *) _54;
  const struct Clock_Ip_DividerTriggerConfigType * _55;
  unsigned char _56;
  long unsigned int _57;
  <unnamed type> _58;
  unsigned char _59;
  int _60;
  unsigned char _61;
  void (*<T666>) (const struct Clock_Ip_PllConfigType *) _62;
  const struct Clock_Ip_PllConfigType * _63;
  unsigned char _64;
  long unsigned int _65;
  <unnamed type> _66;
  unsigned char _67;
  int _68;
  unsigned char _69;
  void (*<T695>) (const struct Clock_Ip_CmuConfigType *) _70;
  const struct Clock_Ip_CmuConfigType * _71;
  unsigned char _72;
  long unsigned int _73;
  <unnamed type> _74;
  unsigned char _75;
  int _76;
  unsigned char _77;
  void (*<T630>) (const struct Clock_Ip_XoscConfigType *) _78;
  const struct Clock_Ip_XoscConfigType * _79;
  unsigned char _80;
  long unsigned int _81;
  <unnamed type> _82;
  unsigned char _83;
  int _84;
  unsigned char _85;
  void (*<T666>) (const struct Clock_Ip_PllConfigType *) _86;
  const struct Clock_Ip_PllConfigType * _87;
  unsigned char _88;
  long unsigned int _89;
  <unnamed type> _90;
  unsigned char _91;
  int _92;
  unsigned char _93;
  void (*<T655>) (const struct Clock_Ip_FracDivConfigType *) _94;
  const struct Clock_Ip_FracDivConfigType * _95;
  unsigned char _96;
  long unsigned int _97;
  <unnamed type> _98;
  <unnamed type> _99;
  <unnamed type> _100;
  unsigned char _101;
  int _102;
  unsigned char _103;
  void (*<T679>) (const struct Clock_Ip_SelectorConfigType *) _104;
  const struct Clock_Ip_SelectorConfigType * _105;
  unsigned char _106;
  long unsigned int _107;
  _Bool Clock_Ip_bClockTreeIsConsumingPll.2_108;
  <unnamed type> _109;
  unsigned char _110;
  int _111;
  unsigned char _112;
  void (*<T685>) (const struct Clock_Ip_GateConfigType *) _113;
  const struct Clock_Ip_GateConfigType * _114;
  unsigned char _115;
  long unsigned int _116;
  const struct Clock_IP_SpecificPeriphConfigType * _117;
  <unnamed type> _118;
  unsigned char _119;
  int _120;
  unsigned char _121;
  void (*<T695>) (const struct Clock_Ip_CmuConfigType *) _122;
  const struct Clock_Ip_CmuConfigType * _123;
  unsigned char _124;
  long unsigned int _125;
  unsigned char _213;
  long unsigned int _216;
  <unnamed type> _217;
  unsigned char _218;
  int _219;
  unsigned char _220;
  void (*<T679>) (const struct Clock_Ip_SelectorConfigType *) _222;
  const struct Clock_Ip_SelectorConfigType * _223;
  unsigned char _224;
  long unsigned int _227;
  <unnamed type> _228;
  unsigned char _229;
  int _230;
  unsigned char _231;
  void (*<T655>) (const struct Clock_Ip_FracDivConfigType *) _233;
  const struct Clock_Ip_FracDivConfigType * _234;
  unsigned char _235;
  long unsigned int _238;
  <unnamed type> _239;
  unsigned char _240;
  int _241;
  unsigned char _242;
  void (*<T666>) (const struct Clock_Ip_PllConfigType *) _244;
  const struct Clock_Ip_PllConfigType * _245;
  unsigned char _246;
  long unsigned int _249;
  <unnamed type> _250;
  unsigned char _251;
  int _252;
  unsigned char _253;
  void (*<T630>) (const struct Clock_Ip_XoscConfigType *) _255;
  const struct Clock_Ip_XoscConfigType * _256;
  _Bool Clock_Ip_bObjectsAreInitialized.3_257;
  _Bool FunctionWasCalled.4_258;
  void (*<T695>) (const struct Clock_Ip_CmuConfigType *) _259;
  void (*<T624>) (Clock_Ip_NameType) _260;
  void (*<T624>) (Clock_Ip_NameType) _261;
  Clock_Ip_CmuStatusType (*<T69b>) (Clock_Ip_NameType) _262;
  void (*<T63e>) (const struct Clock_Ip_DividerConfigType *) _263;
  void (*<T649>) (const struct Clock_Ip_DividerTriggerConfigType *) _264;
  void (*<T630>) (const struct Clock_Ip_XoscConfigType *) _265;
  void (*<T655>) (const struct Clock_Ip_FracDivConfigType *) _266;
  Clock_Ip_DfsStatusType (*<T65b>) (Clock_Ip_NameType) _267;
  void (*<T685>) (const struct Clock_Ip_GateConfigType *) _268;
  void (*<T68a>) (Clock_Ip_NameType, boolean) _269;
  void (*<T621>) (const struct Clock_Ip_IrcoscConfigType *) _270;
  void (*<T666>) (const struct Clock_Ip_PllConfigType *) _271;
  Clock_Ip_PllStatusReturnType (*<T66c>) (Clock_Ip_NameType) _272;
  void (*<T679>) (const struct Clock_Ip_SelectorConfigType *) _273;
  void (*<T6a7>) (const struct Clock_Ip_PcfsConfigType *) _274;

  <bb 2> [local count: 118111596]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig = Config_160(D);
  # DEBUG BEGIN_STMT
  Clock_Ip_SpecificPlatformInitClock (Config_160(D));
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.1_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.1_1 != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [local count: 668941133]:
  # DEBUG BEGIN_STMT
  _2 = Config_160(D)->Cmus[Index_126].Name;
  _3 = Clock_Ip_au8ClockFeatures[_2][1];
  _4 = (int) _3;
  _5 = Clock_Ip_au8CmuCallbackIndex[_4];
  CallbackIndex_163 = (uint32) _5;
  # DEBUG CallbackIndex => CallbackIndex_163
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_axCmuCallbacks[CallbackIndex_163].Reset;
  _7 = &Config_160(D)->Cmus[Index_126];
  _6 (_7);
  # DEBUG BEGIN_STMT
  Index_165 = Index_126 + 1;
  # DEBUG Index => Index_165

  <bb 4> [local count: 751619250]:
  # Index_126 = PHI <Index_165(3), 0(2)>
  # DEBUG Index => Index_126
  # DEBUG BEGIN_STMT
  _8 = Config_160(D)->CmusCount;
  _9 = (long unsigned int) _8;
  if (_9 > Index_126)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111596]:
  # DEBUG BEGIN_STMT
  # DEBUG Config => Config_160(D)
  # DEBUG INLINE_ENTRY Clock_Ip_ResetClockConfiguration
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _213 = Config_160(D)->SelectorsCount;
  Index_214 = (uint32) _213;
  # DEBUG Index => Index_214
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630191]:
  # DEBUG BEGIN_STMT
  _216 = Index_215 + 4294967295;
  _217 = Config_160(D)->Selectors[_216].Name;
  _218 = Clock_Ip_au8ClockFeatures[_217][1];
  _219 = (int) _218;
  _220 = Clock_Ip_au8SelectorCallbackIndex[_219];
  CallbackIndex_221 = (uint32) _220;
  # DEBUG CallbackIndex => CallbackIndex_221
  # DEBUG BEGIN_STMT
  _222 = Clock_Ip_axSelectorCallbacks[CallbackIndex_221].Reset;
  _223 = &Config_160(D)->Selectors[_216];
  _222 (_223);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _216

  <bb 7> [local count: 1073741789]:
  # Index_215 = PHI <Index_214(5), _216(6)>
  # DEBUG Index => Index_215
  # DEBUG BEGIN_STMT
  if (Index_215 != 0)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111597]:
  # DEBUG BEGIN_STMT
  _224 = Config_160(D)->FracDivsCount;
  Index_225 = (uint32) _224;
  # DEBUG Index => Index_225
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 955630198]:
  # DEBUG BEGIN_STMT
  _227 = Index_226 + 4294967295;
  _228 = Config_160(D)->FracDivs[_227].Name;
  _229 = Clock_Ip_au8ClockFeatures[_228][1];
  _230 = (int) _229;
  _231 = Clock_Ip_au8FractionalDividerCallbackIndex[_230];
  CallbackIndex_232 = (uint32) _231;
  # DEBUG CallbackIndex => CallbackIndex_232
  # DEBUG BEGIN_STMT
  _233 = Clock_Ip_axFracDivCallbacks[CallbackIndex_232].Reset;
  _234 = &Config_160(D)->FracDivs[_227];
  _233 (_234);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _227

  <bb 10> [local count: 1073741796]:
  # Index_226 = PHI <Index_225(8), _227(9)>
  # DEBUG Index => Index_226
  # DEBUG BEGIN_STMT
  if (Index_226 != 0)
    goto <bb 9>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 118111597]:
  # DEBUG BEGIN_STMT
  _235 = Config_160(D)->PllsCount;
  Index_236 = (uint32) _235;
  # DEBUG Index => Index_236
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 472446392]:
  # DEBUG BEGIN_STMT
  _238 = Index_237 + 4294967295;
  _239 = Config_160(D)->Plls[_238].Name;
  _240 = Clock_Ip_au8ClockFeatures[_239][1];
  _241 = (int) _240;
  _242 = Clock_Ip_au8PllCallbackIndex[_241];
  CallbackIndex_243 = (uint32) _242;
  # DEBUG CallbackIndex => CallbackIndex_243
  # DEBUG BEGIN_STMT
  _244 = Clock_Ip_axPllCallbacks[CallbackIndex_243].Reset;
  _245 = &Config_160(D)->Plls[_238];
  _244 (_245);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _238

  <bb 13> [local count: 590557991]:
  # Index_237 = PHI <Index_236(11), _238(12)>
  # DEBUG Index => Index_237
  # DEBUG BEGIN_STMT
  if (Index_237 != 0)
    goto <bb 12>; [80.00%]
  else
    goto <bb 14>; [20.00%]

  <bb 14> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  _246 = Config_160(D)->XoscsCount;
  Index_247 = (uint32) _246;
  # DEBUG Index => Index_247
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  _249 = Index_248 + 4294967295;
  _250 = Config_160(D)->Xoscs[_249].Name;
  _251 = Clock_Ip_au8ClockFeatures[_250][1];
  _252 = (int) _251;
  _253 = Clock_Ip_au8XoscCallbackIndex[_252];
  CallbackIndex_254 = (uint32) _253;
  # DEBUG CallbackIndex => CallbackIndex_254
  # DEBUG BEGIN_STMT
  _255 = Clock_Ip_axExtOscCallbacks[CallbackIndex_254].Reset;
  _256 = &Config_160(D)->Xoscs[_249];
  _255 (_256);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _249

  <bb 16> [local count: 236223196]:
  # Index_248 = PHI <Index_247(14), _249(15)>
  # DEBUG Index => Index_248
  # DEBUG BEGIN_STMT
  if (Index_248 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 236258633]:
  # DEBUG BEGIN_STMT
  _10 = Config_160(D)->Ircoscs[Index_127].Name;
  _11 = Clock_Ip_au8ClockFeatures[_10][1];
  _12 = (int) _11;
  _13 = Clock_Ip_au8IrcoscCallbackIndex[_12];
  CallbackIndex_210 = (uint32) _13;
  # DEBUG CallbackIndex => CallbackIndex_210
  # DEBUG BEGIN_STMT
  _14 = Clock_Ip_axIntOscCallbacks[CallbackIndex_210].Set;
  _15 = &Config_160(D)->Ircoscs[Index_127];
  _14 (_15);
  # DEBUG BEGIN_STMT
  Index_212 = Index_127 + 1;
  # DEBUG Index => Index_212

  <bb 18> [local count: 354370231]:
  # Index_127 = PHI <0(16), Index_212(17)>
  # DEBUG Config => NULL
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  # DEBUG Index => NULL
  # DEBUG Index => Index_127
  # DEBUG BEGIN_STMT
  _16 = Config_160(D)->IrcoscsCount;
  _17 = (long unsigned int) _16;
  if (_17 > Index_127)
    goto <bb 17>; [66.67%]
  else
    goto <bb 20>; [33.33%]

  <bb 19> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  _18 = Config_160(D)->Xoscs[Index_128].Name;
  _19 = Clock_Ip_au8ClockFeatures[_18][1];
  _20 = (int) _19;
  _21 = Clock_Ip_au8XoscCallbackIndex[_20];
  CallbackIndex_207 = (uint32) _21;
  # DEBUG CallbackIndex => CallbackIndex_207
  # DEBUG BEGIN_STMT
  _22 = Clock_Ip_axExtOscCallbacks[CallbackIndex_207].Set;
  _23 = &Config_160(D)->Xoscs[Index_128];
  _22 (_23);
  # DEBUG BEGIN_STMT
  Index_209 = Index_128 + 1;
  # DEBUG Index => Index_209

  <bb 20> [local count: 236223196]:
  # Index_128 = PHI <Index_209(19), 0(18)>
  # DEBUG Index => Index_128
  # DEBUG BEGIN_STMT
  _24 = Config_160(D)->XoscsCount;
  _25 = (long unsigned int) _24;
  if (_25 > Index_128)
    goto <bb 19>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 21> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => Config_160(D)
  # DEBUG INLINE_ENTRY Clock_Ip_UpdateDriverContext
  # DEBUG Config => D#1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_bObjectsAreInitialized.3_257 = Clock_Ip_bObjectsAreInitialized;
  if (Clock_Ip_bObjectsAreInitialized.3_257 != 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [local count: 59055799]:
  # DEBUG BEGIN_STMT
  Clock_Ip_bObjectsAreInitialized = 1;

  <bb 23> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Clock_Ip_CallEmptyCallbacks
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FunctionWasCalled.4_258 = FunctionWasCalled;
  if (FunctionWasCalled.4_258 != 0)
    goto <bb 25>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 24> [local count: 59055799]:
  # DEBUG BEGIN_STMT
  FunctionWasCalled = 1;
  # DEBUG BEGIN_STMT
  _259 = Clock_Ip_axCmuCallbacks[0].Set;
  _259 (0B);
  # DEBUG BEGIN_STMT
  _260 = Clock_Ip_axCmuCallbacks[0].Disable;
  _260 (181);
  # DEBUG BEGIN_STMT
  _261 = Clock_Ip_axCmuCallbacks[0].Clear;
  _261 (181);
  # DEBUG BEGIN_STMT
  _262 = Clock_Ip_axCmuCallbacks[0].GetStatus;
  _262 (181);
  # DEBUG BEGIN_STMT
  _263 = Clock_Ip_axDividerCallbacks[0].Set;
  _263 (0B);
  # DEBUG BEGIN_STMT
  _264 = Clock_Ip_axDividerTriggerCallbacks[0].Configure;
  _264 (0B);
  # DEBUG BEGIN_STMT
  _265 = Clock_Ip_axExtOscCallbacks[0].Reset;
  _265 (0B);
  # DEBUG BEGIN_STMT
  _266 = Clock_Ip_axFracDivCallbacks[0].Set;
  _266 (0B);
  # DEBUG BEGIN_STMT
  _267 = Clock_Ip_axFracDivCallbacks[0].Complete;
  _267 (181);
  # DEBUG BEGIN_STMT
  _268 = Clock_Ip_axGateCallbacks[0].Set;
  _268 (0B);
  # DEBUG BEGIN_STMT
  _269 = Clock_Ip_axGateCallbacks[0].Update;
  _269 (181, 0);
  # DEBUG BEGIN_STMT
  _270 = Clock_Ip_axIntOscCallbacks[0].Set;
  _270 (0B);
  # DEBUG BEGIN_STMT
  _271 = Clock_Ip_axPllCallbacks[0].Set;
  _271 (0B);
  # DEBUG BEGIN_STMT
  _272 = Clock_Ip_axPllCallbacks[0].Complete;
  _272 (181);
  # DEBUG BEGIN_STMT
  _273 = Clock_Ip_axSelectorCallbacks[0].Set;
  _273 (0B);
  # DEBUG BEGIN_STMT
  _274 = Clock_Ip_axPcfsCallbacks[0].Set;
  _274 (0B);

  <bb 25> [local count: 118111598]:
  goto <bb 27>; [100.00%]

  <bb 26> [local count: 354334794]:
  # DEBUG BEGIN_STMT
  _26 = Config_160(D)->Pcfs[Index_129].Name;
  _27 = Clock_Ip_au8ClockFeatures[_26][1];
  _28 = (int) _27;
  _29 = Clock_Ip_au8PcfsCallbackIndex[_28];
  CallbackIndex_204 = (uint32) _29;
  # DEBUG CallbackIndex => CallbackIndex_204
  # DEBUG BEGIN_STMT
  _30 = Clock_Ip_axPcfsCallbacks[CallbackIndex_204].Set;
  _31 = &Config_160(D)->Pcfs[Index_129];
  _30 (_31);
  # DEBUG BEGIN_STMT
  Index_206 = Index_129 + 1;
  # DEBUG Index => Index_206

  <bb 27> [local count: 472446392]:
  # Index_129 = PHI <0(25), Index_206(26)>
  # DEBUG Index => NULL
  # DEBUG Index => Index_129
  # DEBUG BEGIN_STMT
  _32 = Config_160(D)->PcfsCount;
  _33 = (long unsigned int) _32;
  if (_33 > Index_129)
    goto <bb 26>; [75.00%]
  else
    goto <bb 29>; [25.00%]

  <bb 28> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  _34 = Config_160(D)->DividerTriggers[Index_130].Name;
  _35 = Clock_Ip_au8ClockFeatures[_34][1];
  _36 = (int) _35;
  _37 = Clock_Ip_au8DividerTriggerCallbackIndex[_36];
  CallbackIndex_201 = (uint32) _37;
  # DEBUG CallbackIndex => CallbackIndex_201
  # DEBUG BEGIN_STMT
  _38 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_201].Configure;
  _39 = &Config_160(D)->DividerTriggers[Index_130];
  _38 (_39);
  # DEBUG BEGIN_STMT
  Index_203 = Index_130 + 1;
  # DEBUG Index => Index_203

  <bb 29> [local count: 236223196]:
  # Index_130 = PHI <Index_203(28), 0(27)>
  # DEBUG Index => Index_130
  # DEBUG BEGIN_STMT
  _40 = Config_160(D)->DividerTriggersCount;
  _41 = (long unsigned int) _40;
  if (_41 > Index_130)
    goto <bb 28>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [local count: 955630209]:
  # DEBUG BEGIN_STMT
  _42 = Config_160(D)->Dividers[Index_131].Name;
  _43 = Clock_Ip_au8ClockFeatures[_42][1];
  _44 = (int) _43;
  _45 = Clock_Ip_au8DividerCallbackIndex[_44];
  CallbackIndex_198 = (uint32) _45;
  # DEBUG CallbackIndex => CallbackIndex_198
  # DEBUG BEGIN_STMT
  _46 = Clock_Ip_axDividerCallbacks[CallbackIndex_198].Set;
  _47 = &Config_160(D)->Dividers[Index_131];
  _46 (_47);
  # DEBUG BEGIN_STMT
  Index_200 = Index_131 + 1;
  # DEBUG Index => Index_200

  <bb 31> [local count: 1073741808]:
  # Index_131 = PHI <Index_200(30), 0(29)>
  # DEBUG Index => Index_131
  # DEBUG BEGIN_STMT
  _48 = Config_160(D)->DividersCount;
  _49 = (long unsigned int) _48;
  if (_49 > Index_131)
    goto <bb 30>; [89.00%]
  else
    goto <bb 33>; [11.00%]

  <bb 32> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  _50 = Config_160(D)->DividerTriggers[Index_132].Name;
  _51 = Clock_Ip_au8ClockFeatures[_50][1];
  _52 = (int) _51;
  _53 = Clock_Ip_au8DividerTriggerCallbackIndex[_52];
  CallbackIndex_195 = (uint32) _53;
  # DEBUG CallbackIndex => CallbackIndex_195
  # DEBUG BEGIN_STMT
  _54 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_195].TriggerUpdate;
  _55 = &Config_160(D)->DividerTriggers[Index_132];
  _54 (_55);
  # DEBUG BEGIN_STMT
  Index_197 = Index_132 + 1;
  # DEBUG Index => Index_197

  <bb 33> [local count: 236223198]:
  # Index_132 = PHI <Index_197(32), 0(31)>
  # DEBUG Index => Index_132
  # DEBUG BEGIN_STMT
  _56 = Config_160(D)->DividerTriggersCount;
  _57 = (long unsigned int) _56;
  if (_57 > Index_132)
    goto <bb 32>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [local count: 472446397]:
  # DEBUG BEGIN_STMT
  _58 = Config_160(D)->Plls[Index_133].Name;
  _59 = Clock_Ip_au8ClockFeatures[_58][1];
  _60 = (int) _59;
  _61 = Clock_Ip_au8PllCallbackIndex[_60];
  CallbackIndex_192 = (uint32) _61;
  # DEBUG CallbackIndex => CallbackIndex_192
  # DEBUG BEGIN_STMT
  _62 = Clock_Ip_axPllCallbacks[CallbackIndex_192].Set;
  _63 = &Config_160(D)->Plls[Index_133];
  _62 (_63);
  # DEBUG BEGIN_STMT
  Index_194 = Index_133 + 1;
  # DEBUG Index => Index_194

  <bb 35> [local count: 590557997]:
  # Index_133 = PHI <Index_194(34), 0(33)>
  # DEBUG Index => Index_133
  # DEBUG BEGIN_STMT
  _64 = Config_160(D)->PllsCount;
  _65 = (long unsigned int) _64;
  if (_65 > Index_133)
    goto <bb 34>; [80.00%]
  else
    goto <bb 37>; [20.00%]

  <bb 36> [local count: 955630218]:
  # DEBUG BEGIN_STMT
  _66 = Config_160(D)->Cmus[Index_134].Name;
  _67 = Clock_Ip_au8ClockFeatures[_66][1];
  _68 = (int) _67;
  _69 = Clock_Ip_au8CmuCallbackIndex[_68];
  CallbackIndex_189 = (uint32) _69;
  # DEBUG CallbackIndex => CallbackIndex_189
  # DEBUG BEGIN_STMT
  _70 = Clock_Ip_axCmuCallbacks[CallbackIndex_189].Set;
  _71 = &Config_160(D)->Cmus[Index_134];
  _70 (_71);
  # DEBUG BEGIN_STMT
  Index_191 = Index_134 + 1;
  # DEBUG Index => Index_191

  <bb 37> [local count: 1073741817]:
  # Index_134 = PHI <Index_191(36), 0(35)>
  # DEBUG Index => Index_134
  # DEBUG BEGIN_STMT
  _72 = Config_160(D)->CmusCount;
  _73 = (long unsigned int) _72;
  if (_73 > Index_134)
    goto <bb 36>; [89.00%]
  else
    goto <bb 39>; [11.00%]

  <bb 38> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _74 = Config_160(D)->Xoscs[Index_135].Name;
  _75 = Clock_Ip_au8ClockFeatures[_74][1];
  _76 = (int) _75;
  _77 = Clock_Ip_au8XoscCallbackIndex[_76];
  CallbackIndex_186 = (uint32) _77;
  # DEBUG CallbackIndex => CallbackIndex_186
  # DEBUG BEGIN_STMT
  _78 = Clock_Ip_axExtOscCallbacks[CallbackIndex_186].Complete;
  _79 = &Config_160(D)->Xoscs[Index_135];
  _78 (_79);
  # DEBUG BEGIN_STMT
  Index_188 = Index_135 + 1;
  # DEBUG Index => Index_188

  <bb 39> [local count: 236223200]:
  # Index_135 = PHI <Index_188(38), 0(37)>
  # DEBUG Index => Index_135
  # DEBUG BEGIN_STMT
  _80 = Config_160(D)->XoscsCount;
  _81 = (long unsigned int) _80;
  if (_81 > Index_135)
    goto <bb 38>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 40> [local count: 472446400]:
  # DEBUG BEGIN_STMT
  _82 = Config_160(D)->Plls[Index_136].Name;
  _83 = Clock_Ip_au8ClockFeatures[_82][1];
  _84 = (int) _83;
  _85 = Clock_Ip_au8PllCallbackIndex[_84];
  CallbackIndex_183 = (uint32) _85;
  # DEBUG CallbackIndex => CallbackIndex_183
  # DEBUG BEGIN_STMT
  _86 = Clock_Ip_axPllCallbacks[CallbackIndex_183].Enable;
  _87 = &Config_160(D)->Plls[Index_136];
  _86 (_87);
  # DEBUG BEGIN_STMT
  Index_185 = Index_136 + 1;
  # DEBUG Index => Index_185

  <bb 41> [local count: 590558002]:
  # Index_136 = PHI <Index_185(40), 0(39)>
  # DEBUG Index => Index_136
  # DEBUG BEGIN_STMT
  _88 = Config_160(D)->PllsCount;
  _89 = (long unsigned int) _88;
  if (_89 > Index_136)
    goto <bb 40>; [80.00%]
  else
    goto <bb 43>; [20.00%]

  <bb 42> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _90 = Config_160(D)->FracDivs[Index_137].Name;
  _91 = Clock_Ip_au8ClockFeatures[_90][1];
  _92 = (int) _91;
  _93 = Clock_Ip_au8FractionalDividerCallbackIndex[_92];
  CallbackIndex_180 = (uint32) _93;
  # DEBUG CallbackIndex => CallbackIndex_180
  # DEBUG BEGIN_STMT
  _94 = Clock_Ip_axFracDivCallbacks[CallbackIndex_180].Set;
  _95 = &Config_160(D)->FracDivs[Index_137];
  _94 (_95);
  # DEBUG BEGIN_STMT
  Index_182 = Index_137 + 1;
  # DEBUG Index => Index_182

  <bb 43> [local count: 1073741824]:
  # Index_137 = PHI <Index_182(42), 0(41)>
  # DEBUG Index => Index_137
  # DEBUG BEGIN_STMT
  _96 = Config_160(D)->FracDivsCount;
  _97 = (long unsigned int) _96;
  if (_97 > Index_137)
    goto <bb 42>; [89.00%]
  else
    goto <bb 44>; [11.00%]

  <bb 44> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Clock_Ip_bClockTreeIsConsumingPll = 0;
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 49>; [100.00%]

  <bb 45> [local count: 955630214]:
  # DEBUG BEGIN_STMT
  _98 = Config_160(D)->Selectors[Index_138].Value;
  _99 = Clock_Ip_aeSourceTypeClockName[_98];
  if (_99 != 3)
    goto <bb 46>; [66.00%]
  else
    goto <bb 47>; [34.00%]

  <bb 46> [local count: 630715941]:
  # DEBUG BEGIN_STMT
  _100 = Config_160(D)->Selectors[Index_138].Name;
  _101 = Clock_Ip_au8ClockFeatures[_100][1];
  _102 = (int) _101;
  _103 = Clock_Ip_au8SelectorCallbackIndex[_102];
  CallbackIndex_177 = (uint32) _103;
  # DEBUG CallbackIndex => CallbackIndex_177
  # DEBUG BEGIN_STMT
  _104 = Clock_Ip_axSelectorCallbacks[CallbackIndex_177].Set;
  _105 = &Config_160(D)->Selectors[Index_138];
  _104 (_105);
  goto <bb 48>; [100.00%]

  <bb 47> [local count: 324914272]:
  # DEBUG BEGIN_STMT
  Clock_Ip_bClockTreeIsConsumingPll = 1;

  <bb 48> [local count: 955630214]:
  # DEBUG BEGIN_STMT
  Index_179 = Index_138 + 1;
  # DEBUG Index => Index_179

  <bb 49> [local count: 1073741813]:
  # Index_138 = PHI <0(44), Index_179(48)>
  # DEBUG Index => Index_138
  # DEBUG BEGIN_STMT
  _106 = Config_160(D)->SelectorsCount;
  _107 = (long unsigned int) _106;
  if (_107 > Index_138)
    goto <bb 45>; [89.00%]
  else
    goto <bb 50>; [11.00%]

  <bb 50> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  Clock_Ip_bClockTreeIsConsumingPll.2_108 = Clock_Ip_bClockTreeIsConsumingPll;
  if (Clock_Ip_bClockTreeIsConsumingPll.2_108 != 0)
    goto <bb 56>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  _109 = Config_160(D)->Gates[Index_139].Name;
  _110 = Clock_Ip_au8ClockFeatures[_109][1];
  _111 = (int) _110;
  _112 = Clock_Ip_au8GateCallbackIndex[_111];
  CallbackIndex_173 = (uint32) _112;
  # DEBUG CallbackIndex => CallbackIndex_173
  # DEBUG BEGIN_STMT
  _113 = Clock_Ip_axGateCallbacks[CallbackIndex_173].Set;
  _114 = &Config_160(D)->Gates[Index_139];
  _113 (_114);
  # DEBUG BEGIN_STMT
  Index_175 = Index_139 + 1;
  # DEBUG Index => Index_175

  <bb 52> [local count: 536870909]:
  # Index_139 = PHI <Index_175(51), 0(50)>
  # DEBUG Index => Index_139
  # DEBUG BEGIN_STMT
  _115 = Config_160(D)->GatesCount;
  _116 = (long unsigned int) _115;
  if (_116 > Index_139)
    goto <bb 51>; [89.00%]
  else
    goto <bb 53>; [11.00%]

  <bb 53> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _117 = &Config_160(D)->SpecificPeriphalConfiguration;
  Clock_Ip_SpecificPeripheralClockInitialization (_117);
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 55>; [100.00%]

  <bb 54> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _118 = Config_160(D)->Cmus[Index_140].Name;
  _119 = Clock_Ip_au8ClockFeatures[_118][1];
  _120 = (int) _119;
  _121 = Clock_Ip_au8CmuCallbackIndex[_120];
  CallbackIndex_170 = (uint32) _121;
  # DEBUG CallbackIndex => CallbackIndex_170
  # DEBUG BEGIN_STMT
  _122 = Clock_Ip_axCmuCallbacks[CallbackIndex_170].Enable;
  _123 = &Config_160(D)->Cmus[Index_140];
  _122 (_123);
  # DEBUG BEGIN_STMT
  Index_172 = Index_140 + 1;
  # DEBUG Index => Index_172

  <bb 55> [local count: 536870913]:
  # Index_140 = PHI <0(53), Index_172(54)>
  # DEBUG Index => Index_140
  # DEBUG BEGIN_STMT
  _124 = Config_160(D)->CmusCount;
  _125 = (long unsigned int) _124;
  if (_125 > Index_140)
    goto <bb 54>; [89.00%]
  else
    goto <bb 56>; [11.00%]

  <bb 56> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_GetPllStatus (Clock_Ip_GetPllStatus, funcdef_no=6, decl_uid=5763, cgraph_uid=7, symbol_order=10)


Symbols to be put in SSA form
{ D.6790 D.7100 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 9 and 12
Merging blocks 16 and 11
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 3
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 8 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 14 }
;; 9 succs { 12 }
;; 10 succs { 13 11 }
;; 11 succs { 12 }
;; 12 succs { 10 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Clock_Ip_GetPllStatus ()
{
  uint32 CallbackIndex;
  uint32 Index;
  Clock_Ip_DfsStatusType DfsStatus;
  Clock_Ip_PllStatusType RetValue;
  Clock_Ip_PllStatusType D.7100;
  uint32 CallbackIndex;
  uint32 Index;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusType RetValue;
  <unnamed type> _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  Clock_Ip_PllStatusReturnType (*<T66c>) (Clock_Ip_NameType) _5;
  <unnamed type> _24;
  unsigned char _25;
  int _26;
  unsigned char _27;
  Clock_Ip_DfsStatusType (*<T65b>) (Clock_Ip_NameType) _29;

  <bb 2> [local count: 261993004]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 858993459]:
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_aeHwPllName[Index_12];
  _2 = Clock_Ip_au8ClockFeatures[_1][1];
  _3 = (int) _2;
  _4 = Clock_Ip_au8PllCallbackIndex[_3];
  CallbackIndex_18 = (uint32) _4;
  # DEBUG CallbackIndex => CallbackIndex_18
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_axPllCallbacks[CallbackIndex_18].Complete;
  PllStatus_20 = _5 (_1);
  # DEBUG PllStatus => PllStatus_20
  # DEBUG BEGIN_STMT
  if (PllStatus_20 == 1)
    goto <bb 8>; [5.50%]
  else
    goto <bb 4>; [94.50%]

  <bb 4> [local count: 811748819]:
  # DEBUG BEGIN_STMT
  if (PllStatus_20 == 2)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 275994598]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 0

  <bb 6> [local count: 811748819]:
  # RetValue_8 = PHI <RetValue_9(4), 0(5)>
  # DEBUG RetValue => RetValue_8
  # DEBUG BEGIN_STMT
  Index_21 = Index_12 + 1;
  # DEBUG Index => Index_21

  <bb 7> [local count: 1073741824]:
  # RetValue_9 = PHI <2(2), RetValue_8(6)>
  # Index_12 = PHI <0(2), Index_21(6)>
  # DEBUG Index => Index_12
  # DEBUG RetValue => RetValue_9
  # DEBUG BEGIN_STMT
  if (Index_12 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 8>; [20.00%]

  <bb 8> [local count: 261993005]:
  # RetValue_10 = PHI <1(3), RetValue_9(7)>
  # DEBUG RetValue => RetValue_10
  # DEBUG BEGIN_STMT
  if (RetValue_10 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [local count: 130996503]:
  # Index_13 = PHI <0(8)>
  # DEBUG INLINE_ENTRY Clock_Ip_GetPllStatus
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 947148098]:
  # DEBUG BEGIN_STMT
  _24 = Clock_Ip_aeHwDfsName[Index_23];
  _25 = Clock_Ip_au8ClockFeatures[_24][1];
  _26 = (int) _25;
  _27 = Clock_Ip_au8FractionalDividerCallbackIndex[_26];
  CallbackIndex_28 = (uint32) _27;
  # DEBUG CallbackIndex => CallbackIndex_28
  # DEBUG BEGIN_STMT
  _29 = Clock_Ip_axFracDivCallbacks[CallbackIndex_28].Complete;
  DfsStatus_30 = _29 (_24);
  # DEBUG DfsStatus => DfsStatus_30
  # DEBUG BEGIN_STMT
  if (DfsStatus_30 == 1)
    goto <bb 13>; [5.50%]
  else
    goto <bb 11>; [94.50%]

  <bb 11> [local count: 895054953]:
  # DEBUG BEGIN_STMT
  Index_31 = Index_23 + 1;
  # DEBUG Index => Index_31

  <bb 12> [local count: 1026051454]:
  # Index_23 = PHI <0(9), Index_31(11)>
  # DEBUG Index => Index_23
  # DEBUG BEGIN_STMT
  if (Index_23 != 12)
    goto <bb 10>; [92.31%]
  else
    goto <bb 13>; [7.69%]

  <bb 13> [local count: 130996502]:
  # RetValue_32 = PHI <1(10), 0(12)>
  # DEBUG RetValue => RetValue_32
  # DEBUG BEGIN_STMT
  _36 = RetValue_32;
  # DEBUG RetValue => NULL
  # DEBUG PllStatus => NULL
  # DEBUG DfsStatus => NULL
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  RetValue_6 = _36;

  <bb 14> [local count: 261993005]:
  # RetValue_11 = PHI <RetValue_10(8), RetValue_6(13)>
  # DEBUG RetValue => RetValue_11
  # DEBUG BEGIN_STMT
  return RetValue_11;

}



;; Function Clock_Ip_DistributePll (Clock_Ip_DistributePll, funcdef_no=7, decl_uid=5765, cgraph_uid=8, symbol_order=11)


Symbols to be put in SSA form
{ D.6791 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 19
Number of blocks to update: 18 ( 95%)


Merging blocks 8 and 12
Removing basic block 10
Removing basic block 11
Removing basic block 18
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 4
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 5
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 14 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 14 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 1 }
Clock_Ip_DistributePll ()
{
  uint32 CallbackIndex;
  uint32 Index;
  uint32 CallbackIndex;
  uint32 Index;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.5_1;
  <unnamed type> _2;
  <unnamed type> _3;
  <unnamed type> _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  void (*<T679>) (const struct Clock_Ip_SelectorConfigType *) _8;
  const struct Clock_Ip_SelectorConfigType * _9;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.9_10;
  unsigned char _11;
  long unsigned int _12;
  _Bool Clock_Ip_bClockTreeIsConsumingPll.10_13;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.13_25;
  <unnamed type> _27;
  unsigned char _28;
  int _29;
  unsigned char _30;
  void (*<T685>) (const struct Clock_Ip_GateConfigType *) _32;
  const struct Clock_Ip_GateConfigType * _33;
  unsigned char _35;
  long unsigned int _36;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.13_37;
  const struct Clock_IP_SpecificPeriphConfigType * _38;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.17_39;
  <unnamed type> _41;
  unsigned char _42;
  int _43;
  unsigned char _44;
  void (*<T695>) (const struct Clock_Ip_CmuConfigType *) _46;
  const struct Clock_Ip_CmuConfigType * _47;
  unsigned char _49;
  long unsigned int _50;

  <bb 2> [local count: 168730857]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.5_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.5_1 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 3> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_pxConfig.9_10->Selectors[Index_16].Value;
  _3 = Clock_Ip_aeSourceTypeClockName[_2];
  if (_3 == 3)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 324914276]:
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_pxConfig.9_10->Selectors[Index_16].Name;
  _5 = Clock_Ip_au8ClockFeatures[_4][1];
  _6 = (int) _5;
  _7 = Clock_Ip_au8SelectorCallbackIndex[_6];
  CallbackIndex_22 = (uint32) _7;
  # DEBUG CallbackIndex => CallbackIndex_22
  # DEBUG BEGIN_STMT
  _8 = Clock_Ip_axSelectorCallbacks[CallbackIndex_22].Set;
  _9 = &Clock_Ip_pxConfig.9_10->Selectors[Index_16];
  _8 (_9);

  <bb 5> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Index_24 = Index_16 + 1;
  # DEBUG Index => Index_24

  <bb 6> [local count: 1073741824]:
  # Index_16 = PHI <Index_24(5), 0(2)>
  # DEBUG Index => Index_16
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.9_10 = Clock_Ip_pxConfig;
  _11 = Clock_Ip_pxConfig.9_10->SelectorsCount;
  _12 = (long unsigned int) _11;
  if (_12 > Index_16)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Clock_Ip_bClockTreeIsConsumingPll.10_13 = Clock_Ip_bClockTreeIsConsumingPll;
  if (Clock_Ip_bClockTreeIsConsumingPll.10_13 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 8> [local count: 59055800]:
  # Index_17 = PHI <0(7)>
  # DEBUG INLINE_ENTRY Clock_Ip_DistributePll
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 477815115]:
  # DEBUG BEGIN_STMT
  _27 = Clock_Ip_pxConfig.13_25->Gates[Index_26].Name;
  _28 = Clock_Ip_au8ClockFeatures[_27][1];
  _29 = (int) _28;
  _30 = Clock_Ip_au8GateCallbackIndex[_29];
  CallbackIndex_31 = (uint32) _30;
  # DEBUG CallbackIndex => CallbackIndex_31
  # DEBUG BEGIN_STMT
  _32 = Clock_Ip_axGateCallbacks[CallbackIndex_31].Set;
  _33 = &Clock_Ip_pxConfig.13_25->Gates[Index_26];
  _32 (_33);
  # DEBUG BEGIN_STMT
  Index_34 = Index_26 + 1;
  # DEBUG Index => Index_34

  <bb 10> [local count: 536870916]:
  # Index_26 = PHI <0(8), Index_34(9)>
  # DEBUG Index => Index_26
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.13_25 = Clock_Ip_pxConfig;
  _35 = Clock_Ip_pxConfig.13_25->GatesCount;
  _36 = (long unsigned int) _35;
  if (Index_26 < _36)
    goto <bb 9>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 59055801]:
  # Clock_Ip_pxConfig.13_37 = PHI <Clock_Ip_pxConfig.13_25(10)>
  # DEBUG BEGIN_STMT
  _38 = &Clock_Ip_pxConfig.13_37->SpecificPeriphalConfiguration;
  Clock_Ip_SpecificPeripheralClockInitialization (_38);
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 477815117]:
  # DEBUG BEGIN_STMT
  _41 = Clock_Ip_pxConfig.17_39->Cmus[Index_40].Name;
  _42 = Clock_Ip_au8ClockFeatures[_41][1];
  _43 = (int) _42;
  _44 = Clock_Ip_au8CmuCallbackIndex[_43];
  CallbackIndex_45 = (uint32) _44;
  # DEBUG CallbackIndex => CallbackIndex_45
  # DEBUG BEGIN_STMT
  _46 = Clock_Ip_axCmuCallbacks[CallbackIndex_45].Enable;
  _47 = &Clock_Ip_pxConfig.17_39->Cmus[Index_40];
  _46 (_47);
  # DEBUG BEGIN_STMT
  Index_48 = Index_40 + 1;
  # DEBUG Index => Index_48

  <bb 13> [local count: 536870919]:
  # Index_40 = PHI <0(11), Index_48(12)>
  # DEBUG Index => Index_40
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.17_39 = Clock_Ip_pxConfig;
  _49 = Clock_Ip_pxConfig.17_39->CmusCount;
  _50 = (long unsigned int) _49;
  if (Index_40 < _50)
    goto <bb 12>; [89.00%]
  else
    goto <bb 14>; [11.00%]

  <bb 14> [local count: 168730859]:
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  return;

}



;; Function Clock_Ip_Init (Clock_Ip_Init, funcdef_no=4, decl_uid=5759, cgraph_uid=5, symbol_order=8)

Clock_Ip_Init (const struct Clock_Ip_ClockConfigType * Config)
{
  Clock_Ip_PllStatusType PllStatus;
  Clock_Ip_StatusType ClockStatus;
  _Bool Clock_Ip_bClockTreeIsConsumingPll.0_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_InitClock (Config_5(D));
  # DEBUG BEGIN_STMT
  Clock_Ip_bClockTreeIsConsumingPll.0_1 = Clock_Ip_bClockTreeIsConsumingPll;
  if (Clock_Ip_bClockTreeIsConsumingPll.0_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  PllStatus_8 = Clock_Ip_GetPllStatus ();
  # DEBUG PllStatus => PllStatus_8
  # DEBUG BEGIN_STMT
  if (PllStatus_8 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 116930485]:
  # DEBUG BEGIN_STMT
  Clock_Ip_DistributePll ();
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 0

  <bb 5> [local count: 1073741824]:
  # ClockStatus_2 = PHI <0(4), 0(2), 1(3)>
  # DEBUG ClockStatus => ClockStatus_2
  # DEBUG BEGIN_STMT
  return ClockStatus_2;

}



;; Function Clock_Ip_DisableClockMonitor (Clock_Ip_DisableClockMonitor, funcdef_no=8, decl_uid=5773, cgraph_uid=9, symbol_order=12)

Clock_Ip_DisableClockMonitor (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T624>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Disable;
  _4 (ClockName_6(D));
  return;

}



;; Function Clock_Ip_GetClockMonitorStatus (Clock_Ip_GetClockMonitorStatus, funcdef_no=9, decl_uid=5771, cgraph_uid=10, symbol_order=13)

Clock_Ip_GetClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  Clock_Ip_CmuStatusType (*<T69b>) (Clock_Ip_NameType) _4;
  Clock_Ip_CmuStatusType _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].GetStatus;
  _9 = _4 (ClockName_6(D));
  return _9;

}



;; Function Clock_Ip_ClearClockMonitorStatus (Clock_Ip_ClearClockMonitorStatus, funcdef_no=10, decl_uid=5769, cgraph_uid=11, symbol_order=14)

Clock_Ip_ClearClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T624>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Clear;
  _4 (ClockName_6(D));
  return;

}



;; Function Clock_Ip_InstallNotificationsCallback (Clock_Ip_InstallNotificationsCallback, funcdef_no=11, decl_uid=5767, cgraph_uid=12, symbol_order=15)

Clock_Ip_InstallNotificationsCallback (void (*Clock_Ip_NotificationsCallbackType) (Clock_Ip_NotificationType, Clock_Ip_NameType) Callback)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback = Callback_2(D);
  return;

}



;; Function Clock_Ip_DisableModuleClock (Clock_Ip_DisableModuleClock, funcdef_no=12, decl_uid=5775, cgraph_uid=13, symbol_order=16)

Clock_Ip_DisableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T68a>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 1);
  return;

}



;; Function Clock_Ip_EnableModuleClock (Clock_Ip_EnableModuleClock, funcdef_no=13, decl_uid=5777, cgraph_uid=14, symbol_order=17)

Clock_Ip_EnableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T68a>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 0);
  return;

}



;; Function Clock_Ip_ReportClockErrors (Clock_Ip_ReportClockErrors, funcdef_no=14, decl_uid=6529, cgraph_uid=15, symbol_order=18)

Clock_Ip_ReportClockErrors (Clock_Ip_NotificationType Error, Clock_Ip_NameType ClockName)
{
  void (*<T497>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.18_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.18_1 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.18_1 (Error_3(D), ClockName_4(D));
  return;

}



;; Function Clock_Ip_StartTimeout (Clock_Ip_StartTimeout, funcdef_no=15, decl_uid=6544, cgraph_uid=16, symbol_order=19)

Clock_Ip_StartTimeout (uint32 * StartTimeOut, uint32 * ElapsedTimeOut, uint32 * TimeoutTicksOut, uint32 TimeoutUs)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = OsIf_GetCounter (0);
  *StartTimeOut_5(D) = _1;
  # DEBUG BEGIN_STMT
  *ElapsedTimeOut_7(D) = 0;
  # DEBUG BEGIN_STMT
  _2 = OsIf_MicrosToTicks (TimeoutUs_9(D), 0);
  *TimeoutTicksOut_11(D) = _2;
  return;

}



;; Function Clock_Ip_TimeoutExpired (Clock_Ip_TimeoutExpired, funcdef_no=16, decl_uid=6548, cgraph_uid=17, symbol_order=20)

Clock_Ip_TimeoutExpired (uint32 * StartTimeInOut, uint32 * ElapsedTimeInOut, uint32 TimeoutTicks)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;
  boolean _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 = OsIf_GetElapsed (StartTimeInOut_4(D), 0);
  _1 = *ElapsedTimeInOut_7(D);
  _2 = _1 + _6;
  *ElapsedTimeInOut_7(D) = _2;
  # DEBUG BEGIN_STMT
  _10 = _2 >= TimeoutTicks_9(D);
  return _10;

}



;; Function Clock_Ip_GetConfiguredFrequencyValue (Clock_Ip_GetConfiguredFrequencyValue, funcdef_no=17, decl_uid=6535, cgraph_uid=18, symbol_order=21)

Clock_Ip_GetConfiguredFrequencyValue (Clock_Ip_NameType ClockName)
{
  uint32 Index;
  uint32 ReturnValue;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.19_1;
  <unnamed type> _2;
  unsigned char _4;
  long unsigned int _5;

  <bb 2> [local count: 164090760]:
  # DEBUG BEGIN_STMT
  # DEBUG ReturnValue => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.19_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.19_1 != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 8> [local count: 114863532]:
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 1014686024]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_pxConfig.19_1->ConfiguredFrequencies[Index_7].Name;
  if (_2 == ClockName_9(D))
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 4> [local count: 55807731]:
  # Index_3 = PHI <Index_7(3)>
  # DEBUG BEGIN_STMT
  ReturnValue_11 = Clock_Ip_pxConfig.19_1->ConfiguredFrequencies[Index_3].ConfiguredFrequencyValue;
  # DEBUG ReturnValue => ReturnValue_11
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  Index_10 = Index_7 + 1;
  # DEBUG Index => Index_10

  <bb 6> [local count: 1073741824]:
  # Index_7 = PHI <Index_10(5), 0(8)>
  # DEBUG Index => Index_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_pxConfig.19_1->ConfigureFrequenciesCount;
  _5 = (long unsigned int) _4;
  if (_5 > Index_7)
    goto <bb 3>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 164090760]:
  # ReturnValue_6 = PHI <0(2), ReturnValue_11(4), 0(6)>
  # DEBUG ReturnValue => ReturnValue_6
  # DEBUG BEGIN_STMT
  return ReturnValue_6;

}


